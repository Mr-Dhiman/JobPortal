{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/Reducer/index.ts","./src/app/Reducer/joblist-reducer.ts","./src/app/Reducer/loginreducer.ts","./src/app/Selectors/joblist-selector.ts","./src/app/Selectors/login-selector.ts","./src/app/actions/joblist-action.ts","./src/app/actions/loginaction.ts","./src/app/animation.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/account/account.component.ts","./src/app/components/account/account.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/interview/interview.component.ts","./src/app/components/interview/interview.component.html","./src/app/components/jobdetails/jobdetails.component.ts","./src/app/components/jobdetails/jobdetails.component.html","./src/app/components/joblist/joblist.component.ts","./src/app/components/joblist/joblist.component.html","./src/app/components/layout/footer/footer.component.ts","./src/app/components/layout/footer/footer.component.html","./src/app/components/layout/header/header.component.ts","./src/app/components/layout/header/header.component.html","./src/app/components/log-in/log-in.component.ts","./src/app/components/log-in/log-in.component.html","./src/app/components/postjob/postjob.component.ts","./src/app/components/postjob/postjob.component.html","./src/app/components/sign-up/sign-up.component.ts","./src/app/components/sign-up/sign-up.component.html","./src/app/components/update-job/update-job.component.ts","./src/app/components/update-job/update-job.component.html","./src/app/service/account.service.ts","./src/app/service/http.service.ts","./src/app/service/job-redux.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import * as fromlogin from \"../Reducer/loginreducer\";\r\nimport * as fromjobs from \"../Reducer/joblist-reducer\";\r\nimport {  ActionReducerMap,} from '@ngrx/store';\r\n\r\n\r\nexport interface loginReducerState{\r\n    login: fromlogin.loginReducerState,\r\n    jobs:fromjobs.JoblistState\r\n}\r\n\r\nexport const Reducer:ActionReducerMap<loginReducerState>={\r\n\r\n    login : fromlogin.LoginReducer,\r\n    jobs: fromjobs.joblistReducer,\r\n}\r\n\r\nexport const getvalues=(state:loginReducerState)=>{ return state.login};\r\n\r\nexport const getjobsvalues=(state:loginReducerState)=>{return state.jobs};","import {JoblistAction, joblistActionType} from \"../actions/joblist-action\";\r\nimport {joblist} from \"../model/joblist-model\";\r\nimport {filter} from \"rxjs/operators\";\r\n\r\nexport interface JoblistState{\r\n    jobloading:boolean,\r\n    jobloaded:boolean,\r\n    error:string,\r\n    joblist:joblist[]\r\n    delete:boolean,\r\n    Update:boolean\r\n}\r\n\r\nconst initialState:JoblistState={\r\n\r\n    jobloading:false,\r\n    jobloaded:false,\r\n    error:\"\",\r\n    delete:false,\r\n    Update:false,\r\n    joblist:[]\r\n}\r\n\r\nexport function joblistReducer(state = initialState ,action:JoblistAction):JoblistState{\r\n\r\n    switch(action.type){\r\n        case joblistActionType.LoadJobs:{\r\n            return {...state, jobloading:true}\r\n        }\r\n        case joblistActionType.LoadJobsSuccess:{\r\n            const data=action.payload.data;\r\n            return {...state, jobloading:false ,jobloaded:true, joblist:data}\r\n        }\r\n        case joblistActionType.LoadJobFailure:{\r\n            const data=action.payload.data\r\n            return {...state , error:data}\r\n        }\r\n        case joblistActionType.Updatejob:{\r\n           const result=action.payload.id;\r\n           return {\r\n               ...state, Update:true, \r\n           }\r\n        }\r\n        case joblistActionType.DeleteJob:{\r\n            \r\n            const result=state.joblist.filter(data=>data.id !== action.payload.id)\r\n            return {\r\n                ...state, ...{result},delete:true,\r\n            }\r\n        }\r\n        default:{\r\n            return state;\r\n        }\r\n    }\r\n}","import { loginAction, loginActionType } from '../actions/loginaction'\r\nimport { login } from '../model/login-model'\r\n\r\n\r\nexport interface loginReducerState {\r\n    loading: boolean\r\n    loaded: boolean\r\n    error: string\r\n    loginvalues:any\r\n}\r\nconst initialState: loginReducerState = {\r\n    loading: false,\r\n    loaded: false,\r\n    error : \"\",\r\n    loginvalues: []\r\n}\r\n\r\nexport function LoginReducer(state = initialState, action: loginAction): loginReducerState {\r\n\r\n    switch (action.type) {\r\n        case loginActionType.Loadvalues: {\r\n            return { ...state, loading: true,  }\r\n        }\r\n        case loginActionType.LoadValuesSuccess: {\r\n            const data =action.payload.data;\r\n            return { ...state, loading: false, loaded: true, loginvalues: data }\r\n        }\r\n        case loginActionType.LoadFailure: {\r\n            const err = action.payload.err;\r\n            return { ...state, error: err, }\r\n        }\r\n        case loginActionType.RemoveLoad:{\r\n            return { ...state, loginvalues:[]}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n","import {createSelector} from \"@ngrx/store\";\r\nimport {JoblistState} from \"../Reducer/joblist-reducer\"\r\nimport {getjobsvalues} from \"../Reducer\"\r\n\r\nconst getloading=(state:JoblistState)=>{\r\n    return state.jobloading;\r\n}\r\nconst getloadedjobs=(state:JoblistState)=>{\r\n    return state.jobloaded;\r\n}\r\nconst getjobs=(state:JoblistState)=>{\r\n    return state.joblist;\r\n}\r\nconst getjobserr=(state:JoblistState)=>{\r\n    return state.error;\r\n}\r\n\r\nexport const getjobsLoading= createSelector(getjobsvalues, getloading);\r\nexport const getjobsloaded= createSelector(getjobsvalues, getloadedjobs);\r\nexport const getjobslist= createSelector(getjobsvalues, getjobs);\r\nexport const getjobserror= createSelector(getjobsvalues, getjobserr);\r\n","import {loginReducerState} from \"../Reducer/loginreducer\"\r\nimport  {createSelector} from \"@ngrx/store\";\r\nimport {getvalues} from '../Reducer/index';\r\n\r\n\r\n const getloading=(state:loginReducerState)=>{\r\n    return state.loading\r\n}\r\nconst getloaded=(state:loginReducerState)=>{\r\n   return state.loaded\r\n}\r\nconst geterror=(state:loginReducerState)=>{\r\n   return state.error\r\n}\r\nconst getloginvalues=(state:loginReducerState)=>{\r\n  return   state.loginvalues\r\n}\r\nexport const getloginloading=createSelector(getvalues,getloading);\r\nexport const getloginloaded=createSelector(getvalues,getloaded);\r\nexport const getlogivalues=createSelector(getvalues,getloginvalues);\r\nexport const getloginerror=createSelector(getvalues,geterror);\r\n","import {Action} from \"@ngrx/store\";\r\nimport {joblist} from \"../model/joblist-model\"\r\n\r\nexport enum joblistActionType{\r\n\r\n    LoadJobs='[LoadJobs] Load Jobs List',\r\n    LoadJobsSuccess=\"[LoadJobSuccess] Load Jobs Success\",\r\n    LoadJobFailure=\"[LoadJobFailure] Load Jobs Failure\",\r\n    Updatejob=\"[UpdateJob] Update Job\",\r\n    DeleteJob=\"[DeleteJob] Delete Job\"\r\n\r\n}\r\n\r\nexport class LoadJobs implements Action{\r\n    readonly type=joblistActionType.LoadJobs;\r\n}\r\n\r\nexport class LoadJobsSuccess implements Action{\r\n    readonly type=joblistActionType.LoadJobsSuccess;\r\n    constructor(public payload:{data?: joblist[]}){}\r\n}\r\nexport class LoadJobFailure implements Action{\r\n    readonly type =joblistActionType.LoadJobFailure;\r\n    constructor(public payload:{data?:string}){}\r\n}\r\nexport class UpdateJob implements Action {\r\n    readonly type=joblistActionType.Updatejob;\r\n    constructor (public payload:{id?:string,data?: joblist[]}){}\r\n}\r\nexport class DeleteJob implements Action {\r\n    readonly type=joblistActionType.DeleteJob;\r\n    constructor(public payload:{id:string}){}\r\n}\r\n\r\nexport type JoblistAction= LoadJobs | LoadJobsSuccess | LoadJobFailure | UpdateJob | DeleteJob;","import { Action } from \"@ngrx/store\"\r\nimport { login } from \"../model/login-model\"\r\n\r\nexport enum loginActionType {\r\n    Loadvalues = '[login] Load values',\r\n    LoadValuesSuccess = '[login] Load Values Success',\r\n    LoadFailure = '[login] Loadd Failure',\r\n    RemoveLoad=\"Remove login user\"\r\n}\r\n\r\nexport class LoadValues implements Action {\r\n    readonly type = loginActionType.Loadvalues;\r\n}\r\nexport class RemoveLoad implements Action{\r\n    readonly type= loginActionType.RemoveLoad\r\n}\r\n\r\nexport class LoadValuesSuccess implements Action {\r\n    readonly type = loginActionType.LoadValuesSuccess;\r\n    constructor(public payload: { data?: any }) { }\r\n}\r\n\r\nexport class LoadFailure implements Action {\r\n    readonly type = loginActionType.LoadFailure;\r\n    constructor(public payload: { err?: string }) {}\r\n}\r\n\r\nexport type loginAction = LoadValues | LoadValuesSuccess | LoadFailure | RemoveLoad;","import {animate, animateChild, group, query, style, transition, trigger} from \"@angular/animations\";\r\n\r\nexport const slideInAnimation =\r\n  trigger('routeAnimations', [\r\n    // transition('HomePage <=> postjob', [\r\n    //   style({ position: 'relative' }),\r\n    //   query(':enter, :leave', [\r\n    //     style({\r\n    //       position: 'absolute',\r\n    //       top: 0,\r\n    //       left: 0,\r\n    //       width: '100%'\r\n    //     })\r\n    //   ]),\r\n    //   query(':enter', [\r\n    //     style({ left: '-100%' })\r\n    //   ]),\r\n    //   query(':leave', animateChild()),\r\n    //   group([\r\n    //     query(':leave', [\r\n    //       animate('300ms ease-out', style({ left: '100%' }))\r\n    //     ]),\r\n    //     query(':enter', [\r\n    //       animate('300ms ease-out', style({ left: '0%' }))\r\n    //     ])\r\n    //   ]),\r\n    //   query(':enter', animateChild()),\r\n    // ]),\r\n    transition('* <=> login', [\r\n      style({ position: 'relative' }),\r\n      query(':enter, :leave', [\r\n        style({\r\n          position: 'absolute',\r\n          top: 0,\r\n          left: 0,\r\n          width: '100%'\r\n        })\r\n      ], {optional: true}),\r\n      query(':enter', [\r\n        style({ left: '-100%' })\r\n      ], {optional: true}),\r\n      query(':leave', animateChild(), {optional: true}),\r\n      group([\r\n        query(':leave', [\r\n          animate('200ms ease-out', style({ left: '100%' }))\r\n        ], {optional: true}),\r\n        query(':enter', [\r\n          animate('300ms ease-out', style({ left: '0%' }))\r\n        ], {optional: true})\r\n      ]),\r\n      query(':enter', animateChild()),\r\n    ]),\r\n    transition('* <=> homepage', [\r\n        style({ position: 'relative' }),\r\n        query(':enter, :leave', [\r\n          style({\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            width: '100%'\r\n          })\r\n        ], {optional: true}),\r\n        query(':enter', [\r\n          style({ left: '-100%' })\r\n        ], {optional: true}),\r\n        query(':leave', animateChild(), {optional: true}),\r\n        group([\r\n          query(':leave', [\r\n            animate('200ms ease-out', style({ left: '100%' }))\r\n          ], {optional: true}),\r\n          query(':enter', [\r\n            animate('300ms ease-out', style({ left: '0%' }))\r\n          ], {optional: true})\r\n        ]),\r\n        query(':enter', animateChild()),\r\n      ]),\r\n      transition('* <=> postjob', [\r\n        style({ position: 'relative' }),\r\n        query(':enter, :leave', [\r\n          style({\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            width: '100%'\r\n          })\r\n        ], {optional: true}),\r\n        query(':enter', [\r\n          style({ left: '-100%' })\r\n        ], {optional: true}),\r\n        query(':leave', animateChild(), {optional: true}),\r\n        group([\r\n          query(':leave', [\r\n            animate('200ms ease-out', style({ left: '100%' }))\r\n          ], {optional: true}),\r\n          query(':enter', [\r\n            animate('300ms ease-out', style({ left: '0%' }))\r\n          ], {optional: true})\r\n        ]),\r\n        query(':enter', animateChild()),\r\n      ]),\r\n      transition('* <=> joblist', [\r\n        style({ position: 'relative' }),\r\n        query(':enter, :leave', [\r\n          style({\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            width: '100%'\r\n          })\r\n        ], {optional: true}),\r\n        query(':enter', [\r\n          style({ left: '-100%' })\r\n        ], {optional: true}),\r\n        query(':leave', animateChild(), {optional: true}),\r\n        group([\r\n          query(':leave', [\r\n            animate('200ms ease-out', style({ left: '100%' }))\r\n          ], {optional: true}),\r\n          query(':enter', [\r\n            animate('300ms ease-out', style({ left: '0%' }))\r\n          ], {optional: true})\r\n        ]),\r\n        query(':enter', animateChild()),\r\n      ])\r\n  ]);","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from \"./components/home/home.component\";\nimport { LogInComponent } from \"./components/log-in/log-in.component\"\nimport { SignUpComponent } from './components/sign-up/sign-up.component';\nimport { JoblistComponent } from './components/joblist/joblist.component';\nimport { PostjobComponent } from \"./components/postjob/postjob.component\";\nimport { HeaderComponent } from './components/layout/header/header.component'\nimport { UpdateJobComponent } from \"./components/update-job/update-job.component\"\nimport { InterviewComponent } from \"./components/interview/interview.component\";\nimport { JobdetailsComponent } from \"./components/jobdetails/jobdetails.component\"\nimport {AccountComponent} from \"./components/account/account.component\"\nconst routes: Routes = [\n\n  {\n    path: \"\", redirectTo: \"Home\", pathMatch: \"full\"\n  },\n\n  {\n    path: \"Home\", component: HomeComponent, data: {\n      animation: \"homepage\"\n   },\n  },\n  {\n    path:\"Account\", component:AccountComponent, \n  },\n\n  {\n    path: \"jobdetail\" , component: JobdetailsComponent,\n  }, \n  \n  {\n    path: \"Hotarticle\", component: InterviewComponent, \n  },\n  {\n    path: \"UpdateJob\", component: UpdateJobComponent, \n  },\n  \n  {\n    path: \"login\", component: LogInComponent, data: {\n      animation: \"login\"\n    }\n  },\n  {\n    path: \"signup\", component: SignUpComponent\n  },\n  {\n    path: \"joblist\", component: JoblistComponent, data: { animation: \"joblist\" },\n  },\n  {\n    path: \"postjob\", component: PostjobComponent, data: { animation: \"postjob\" },\n  },\n  {\n    path: \"header\", component: HeaderComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport {slideInAnimation} from \"./animation\"\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  animations:[\n    slideInAnimation\n  ]\n})\nexport class AppComponent {\n  title = 'Hoitalent';\n  \n  prepareRoute(outlet: RouterOutlet) {\n    return outlet && outlet.activatedRouteData && outlet.activatedRouteData.animation;\n  }\n}\n","<div [@routeAnimations]=\"prepareRoute(outlet)\">\r\n    <router-outlet #outlet=\"outlet\"></router-outlet>\r\n  </div>","import { BrowserModule } from '@angular/platform-browser';\nimport {FormsModule} from \"@angular/forms\";\nimport { NgModule } from '@angular/core';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations'\nimport { CommonModule } from '@angular/common';\nimport {FacebookLoginProvider,GoogleLoginProvider,SocialAuthServiceConfig,SocialLoginModule,VKLoginProvider} from \"angularx-social-login\";\nimport {HttpClientModule} from '@angular/common/http'\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { HeaderComponent } from './components/layout/header/header.component';\nimport { FooterComponent } from './components/layout/footer/footer.component';\nimport { LogInComponent } from './components/log-in/log-in.component';\nimport { SignUpComponent } from './components/sign-up/sign-up.component';\nimport { JoblistComponent } from './components/joblist/joblist.component';\nimport { PostjobComponent } from './components/postjob/postjob.component';\nimport {Reducer} from './Reducer/index';\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { environment } from '../environments/environment';\nimport {AccountService} from './service/account.service';\nimport { UpdateJobComponent } from './components/update-job/update-job.component';\nimport { InterviewComponent } from './components/interview/interview.component';\nimport { JobdetailsComponent } from './components/jobdetails/jobdetails.component';\nimport { AccountComponent } from './components/account/account.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    LogInComponent,\n    SignUpComponent,\n    JoblistComponent,\n    PostjobComponent,\n    UpdateJobComponent,\n    InterviewComponent,\n    JobdetailsComponent,\n    FooterComponent,\n    HeaderComponent,\n    AccountComponent,\n\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    CommonModule,\n    SocialLoginModule,\n    HttpClientModule,\n    StoreModule.forRoot(Reducer),   \n    \n    StoreDevtoolsModule.instrument({ maxAge: 25, logOnly: environment.production })\n\n  ],\n  exports:[HeaderComponent, FooterComponent],\n  providers: [\n    {\n      provide: 'SocialAuthServiceConfig',\n      useValue: {\n        autoLogin: false,\n        providers: [\n          {\n            id: GoogleLoginProvider.PROVIDER_ID,\n            provider: new GoogleLoginProvider(\n              '624796833023-clhjgupm0pu6vgga7k5i5bsfp6qp6egh.apps.googleusercontent.com'\n            )\n          },\n          {\n            id: FacebookLoginProvider.PROVIDER_ID,\n            provider: new FacebookLoginProvider('561602290896109')\n          },\n          {\n            id:VKLoginProvider.PROVIDER_ID,\n            provider:new VKLoginProvider('7624815')\n          }\n        ]\n      } as SocialAuthServiceConfig,\n    },\n    AccountService\n  ],\n\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { AfterContentInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { getloginloading, getlogivalues } from 'src/app/Selectors/login-selector';\nimport { AccountService } from 'src/app/service/account.service';\nimport {login} from \"../../model/login-model\";\nimport {NgForm} from \"@angular/forms\"\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.css']\n})\nexport class AccountComponent implements OnInit, AfterContentInit  {\n  adminform:NgForm;\n  @ViewChild('adminform') currentForm: NgForm;\n  getlogin:login;\n  updatedval:login;\n  adminid:string\n  constructor(private router:Router, private route:ActivatedRoute , private service:AccountService , private store:Store) { }\n\n  ngOnInit(): void {\n    this.getloginvalue();\n   this.adminid=this.route.snapshot.paramMap.get(\"id\");\n  }\n ngAfterContentInit(){\n\n }\n\n  getloginvalue(){\n\n    const loginloading$=this.store.select(getloginloading)\n    loginloading$.subscribe(data=>{\n      // console.log(data);\n    });\n    const loginvalues$=this.store.select(getlogivalues);\n    loginvalues$.subscribe(data=>{\n      // console.log(data);\n      if(!data.result){\n        this.getlogin=data;\n         \n       }\n       else{\n        this.getlogin=data.result[0];\n       }\n    })\n  }\n  onsignUp(val, valid){\n    if(valid){\n      val.id=this.adminid;\n    this.updatedval=val;\n    // console.log(this.updatedval);\n    if(this.adminid){\n      const getResponse$=this.service.updateAccount(this.updatedval);\n      getResponse$.subscribe(data=>{\n        console.log(data);\n        if(data.status == true){\n          alert(\"account successfully Updated\");\n          this.router.navigate([\"/Home\"]);\n        }\n      })\n    }\n    else{\n      alert(\"You have to login first to Update account\");\n    }\n    }\n  }\n}\n","<app-header></app-header>\n<section class=\"main-content-area01 left col-12\">\n    <div class=\"row\">\n        <div class=\"left log-in-sign-up-form shadow\">\n\n            <div class=\"left col-12 signup-heading\">\n                <a href=\"#\">\n                    <h2>Update Your Account</h2>\n                </a>\n            </div>\n            <div class=\"forem-padding left\">\n                <form #adminform=\"ngForm\" (ngSubmit)=\" onsignUp(adminform.value, adminform.valid)\">\n                    <div class=\"sa-signup-form left col-12 form-select\">\n                        <div class=\"sa-signup-form-left left\">\n                            <label class=\"name\">Full Name<span>*</span></label><br>\n                            <input type=\"text\" name=\"username\" class=\"sa-input col-12\" [ngModel]=\"getlogin.username\" #username=\"ngModel\" required>\n                            <span *ngIf=\"username.invalid && (username.touched || adminform.submitted)\" style=\"color:red ;size: 11px;\">\n                                Invalid Name\n                            </span><br>\n\n                            <label class=\"name\">Email<span>*</span></label>\n                            <input type=\"email\" name=\"email\" class=\"sa-input col-12\" [ngModel]=\"getlogin.email\" #email=\"ngModel\" required\n                                pattern=\"^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$\">\n                            <span *ngIf=\"email.invalid &&(email.touched || adminform.submitted)\" style=\"color:red ;size: 11px;\">\n                                Invalid email\n                            </span>\n\n                            <span class=\"left col-12\">\n                                <span class=\"left colstw\">\n                                    <label class=\"name\">Password<span>*</span></label>\n                                    <input type=\"password\" name=\"password\" class=\"sa-input col-12\" ngModel #password=\"ngModel\" required \n                                    pattern=\"^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,10}$\">\n                                    <span *ngIf=\"password.value ==='' && (password.touched || adminform.submitted)\" style=\"color:red ;size: 11px;\">\n                                        Enter new Password\n                                    </span><br>\n                                    <span *ngIf=\"password.invalid &&(password.touched || adminform.submitted)\" style=\"color:red ;size: 11px;\">\n                                        Password should contain atleast 8-10 char and special character\n                                    </span>\n                                </span>\n                                \n                                <span class=\"right colstw\">\n                                    <label class=\"name\">Confirm Password<span>*</span></label>\n                                    <input type=\"password\" name=\"cofpass\" class=\"sa-input col-12\" ngModel #cofpass='ngModel' required>\n                                    <span *ngIf=\"  cofpass.touched &&  cofpass.value != password.value \" style=\"color:red ;size: 11px;\">\n                                        Invalid password\n                                    </span>\n                                </span>\n                            </span>\n\n                            <label class=\"name\">Nationality<span>*</span></label>\n                            <input type=\"text\" name=\"nationality\" class=\"sa-input col-12\" [ngModel]=\"getlogin.nationality\" #nationality=\"ngModel\" required\n                            ><br>\n                            <span *ngIf=\"nationality.invalid && (nationality.touched || adminform.submitted)\" style=\"color:red ;size: 11px;\">\n                                Field Required\n                            </span>\n\n                        \n                        </div>\n\n                        <div class=\"sa-signup-form-right right\">\n\n                            <label class=\"name\">University<span>*</span></label>\n                            <input type=\"text\" name=\"university\" class=\"sa-input col-12\" [ngModel]=\"getlogin.university\" #university=\"ngModel\" required\n                            >\n                            <span *ngIf=\"university.invalid && (university.touched || adminform.submitted)\" style=\"color:red ;size: 11px;\">\n                                Field Required\n                            </span><br>\n\n                            <label class=\"name\">Highest Degree<span>*</span></label>\n                            <input type=\"text\" name=\"highest_Qualification\" class=\"sa-input col-12\" [ngModel]=\"getlogin.highest_Qualification\" #highest_Qualification=\"ngModel\" required\n                            >\n                            <span *ngIf=\"highest_Qualification.invalid &&(highest_Qualification.touched || adminform.submitted)\" style=\"color:red ;size: 11px;\">\n                                Field Required\n                            </span><br>\n                            <label class=\"name\">Major<span>*</span></label>\n                            <input type=\"text\" name=\"major\" class=\"sa-input col-12\" [ngModel]=\"getlogin.major\" #major=\"ngModel\" required\n                                >\n                            <span *ngIf=\"major.invalid &&(major.touched || adminform.submitted)\" style=\"color:red ;size: 11px;\">\n                                Field Required\n                            </span><br>\n                            <label class=\"name\">Job Preference<span>*</span></label>\n                            <input type=\"text\" name=\"job_prefrence\" class=\"sa-input col-12\" [ngModel]=\"getlogin.job_prefrence\" #job_prefrence=\"ngModel\" required\n                                >\n                            <span *ngIf=\"job_prefrence.invalid &&(job_prefrence.touched || adminform.submitted)\" style=\"color:red ;size: 11px;\">\n                                Field Required\n                            </span><br>\n                            <label class=\"name mobile-vw\">&nbsp;</label>\n                            \n                        </div>\n\n\n                    </div>\n\n                    <div class=\"left col-12\">\n                        <div class=\"sa-btn-location\">\n                            <button type=\"submit\" (click)=\"onsignUp(adminform.value,adminform.valid)\" class=\"sa-btn\">Update</button>\n                        </div>\n                    </div>\n\n                </form>\n            </div>\n\n\n        </div>\n\n    </div>\n</section>","import { AfterContentChecked, AfterContentInit, AfterViewInit, Component, OnChanges, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { joblist } from 'src/app/model/joblist-model';\nimport { JobreduxService } from \"../../service/job-redux\"\nimport {AccountService} from \"../../service/account.service\"\nimport { Store } from '@ngrx/store';\nimport { getloginloading, getlogivalues } from 'src/app/Selectors/login-selector';\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n\n})\n\n\nexport class HomeComponent implements OnInit,AfterContentInit{\n\n  joblist: joblist[];\n  getfeaturedjob: joblist[] = [];\n  getunfeaturedjob:joblist[]=[];\n  experience: Array<number> = [1, 2, 3, 4, 5];\n  filterjob: Array<any>;\n  filterJob_location: Array<any>;\n  filter_experience:Array<any>;\n  filter_compname:Array<any>\n  getsearchedJob: joblist[] = [];\n  adminame: string;\n  \n\n  forcefullloading: boolean = false;\n\n  constructor( private router: Router, private ReduxService: JobreduxService, private service:AccountService, private store:Store) { }\n\n  ngOnInit(): void {\n    this.getfeaturedjobs();\n    this.getunfeaturedjobs();\n    this.getAllJobList();\n\n  }\n  ngAfterContentInit(){\n\n    \n    this.getloginvalue()\n    \n  }\n \n  ngOnDestroy(): void {\n    this.getsearchedJob=[];\n    \n  }\n\n  jobdetail(id){\n    // console.log(id);\n    this.router.navigate([\"/jobdetail\", { id }]);\n  }\n\n  getloginvalue(){\n\n    const loginloading$=this.store.select(getloginloading)\n    loginloading$.subscribe(data=>{\n      // console.log(data);\n    });\n    const loginvalues$=this.store.select(getlogivalues);\n    loginvalues$.subscribe(data=>{\n      // console.log(data);\n      if(!data.result){\n        this.adminame=data.name;\n         \n       }\n       else{\n        this.adminame=data.result[0].username;\n       }\n    })\n  }\n\n\n\n  getalljobs() {\n    this.getsearchedJob = [];\n  }\n\n  onSearch(val) {\n\n    const getjobslist$ = this.ReduxService.getalljobs(this.forcefullloading)[1];\n    const getjobsError$ = this.ReduxService.getalljobs(this.forcefullloading)[2];\n    getjobslist$.subscribe(data => {\n      \n      if(!this.getsearchedJob?.length){\n      data.forEach(element => {\n        if (element.jobtype.toUpperCase() == val.searchJob.toUpperCase()) {\n          this.getsearchedJob.push(element);\n        }\n        if (element.com_name.toUpperCase() == val.searchJob.toUpperCase()) {\n          this.getsearchedJob.push(element);\n        }\n        if (element.com_location.toUpperCase() == val.searchJob.toUpperCase()) {\n          this.getsearchedJob.push(element);\n        }\n      });\n    }\n    if(!this.getsearchedJob?.length){\n    \n      alert(`Not Found ${val.searchJob}`);\n    }\n    })\n\n    // const getjob$ = this.service.getsearchedjob(val);\n    // getjob$.subscribe(data => {\n    //   if (data.code == 'false') {\n    //     alert(`No job Available of type ${val.searchJob}`);\n    //   }\n    //   else {\n    //     this.getsearchedJob = data.result;\n    //     // console.log(this.getsearchedJob);\n    //   }\n\n    // })\n  }\n  getfeaturedjobs() {\n    const getjobslist$ = this.ReduxService.getalljobs(this.forcefullloading)[1];\n    const getjobsError$ = this.ReduxService.getalljobs(this.forcefullloading)[2];\n    getjobslist$.subscribe(data => {\n      if(!this.getfeaturedjob?.length){\n      data.forEach(element => {\n        if (element.featured == true) {\n          this.getfeaturedjob.push(element);\n        }\n      });\n      }\n    }), error => {\n      getjobsError$.subscribe(data => {\n        alert(data);\n      })\n    }\n  }\n  getunfeaturedjobs() {\n    const getjobslist$ = this.ReduxService.getalljobs(this.forcefullloading)[1];\n    const getjobsError$ = this.ReduxService.getalljobs(this.forcefullloading)[2];\n    getjobslist$.subscribe(data => {\n      if(!this.getunfeaturedjob?.length){\n      data.forEach(element => {\n        if (element.featured == false) {\n          this.getunfeaturedjob.push(element);\n        }\n      });\n      }\n    }), error => {\n      getjobsError$.subscribe(data => {\n        alert(data);\n      })\n    }\n  }\n  getAllJobList() {\n    const getjobsloading$ = this.ReduxService.getalljobs(this.forcefullloading)[0];\n    const getjobslist$ = this.ReduxService.getalljobs(this.forcefullloading)[1];\n    const getjobsError$ = this.ReduxService.getalljobs(this.forcefullloading)[2];\n    getjobsloading$.subscribe(data=>{\n      // console.log(data);\n    })\n    getjobslist$.subscribe(data => {\n      // console.log(data);\n      this.joblist = data;\n\n      var filterjob = []\n      this.joblist.forEach(item => {\n        let count = filterjob.filter(x => x.jobtype == item.jobtype).length\n\n        if (count == 0) {\n          filterjob.push(item)\n        }\n      })\n\n      var filter_location = []\n      this.joblist.forEach(item => {\n        let count = filter_location.filter(x => x.com_location == item.com_location).length\n\n        if (count == 0) {\n          filter_location.push(item)\n        }\n      })\n\n      var filter_experience = []\n      this.joblist.forEach(item => {\n        let count = filter_experience.filter(x => x.com_location == item.com_location).length\n\n        if (count == 0) {\n          filter_experience.push(item)\n        }\n      })\n\n      var filter_compname = []\n      this.joblist.forEach(item => {\n        let count = filter_compname.filter(x => x.com_location.toUpperCase() == item.com_location.toUpperCase()).length\n\n        if (count == 0) {\n          filter_compname.push(item)\n        }\n      })\n      this.filter_compname=filter_compname;\n      this.filter_experience=filter_experience;\n      this.filterjob = filterjob;\n      this.filterJob_location = filter_location;\n      // console.log(this.filterjob);\n      // console.log(this.filterJob_location);\n\n    }), error => {\n      getjobsError$.subscribe(data => {\n        alert(data);\n      })\n    }\n  }\n\n}\n","<app-header></app-header>\r\n<section class=\"home_slide\">\r\n    <div class=\"row\">\r\n        <div class=\"left col-12\">\r\n            <div class=\"slidemain_area\">\r\n                <div class=\"left slide_search\">\r\n                    <form #searchbox=\"ngForm\" (ngSubmit)=\"onSearch(searchbox.value)\">\r\n                        <input class=\"search01\" type=\"text\" autocomplete=\"off\" value=\"\"\r\n                            placeholder=\"Search Job Type,job Location, Company Name\" name=\"searchJob\" ngModel\r\n                            #searchbox=\"ngModel\">\r\n                        <i class=\"fa fa-search\"></i>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n\r\n\r\n<section class=\"main-content-area left col-12\">\r\n    <div class=\"row\">\r\n        <div class=\"left col-12\">\r\n            <div class=\"mca-left-area left\">\r\n\r\n\r\n                <div class=\"filter-area-main\">\r\n                    <!-- <div class=\"heading01\">\r\n                        <h4>Filter For More Detail</h4>\r\n                    </div> -->\r\n                    <div class=\"filter-area left\">\r\n\r\n                        <div id=\"accordion\">\r\n                            <h3>Job location Available</h3>\r\n                            <div class=\"\">\r\n                                <div class=\"left col-12 checkbox-area01\" *ngFor=\"let job of filterJob_location \">\r\n                                    <h4 style=\"margin-left:  10px;\">\r\n                                        -> {{job.com_location}}\r\n                                    </h4>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <h3> Experience Wise Jobs Available</h3>\r\n                            <div class=\"\">\r\n                                <div class=\"left col-12 checkbox-area01\" *ngFor=\"let exp of filter_experience\">\r\n                                    <h4 style=\"margin-left:  10px;\">\r\n                                        -> {{exp.experince}}\r\n                                    </h4>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <h3>Job Type Available</h3>\r\n                            <div class=\"\">\r\n                                <div class=\"left col-12 checkbox-area01\" *ngFor=\"let job of filterjob \">\r\n                                    <h4 style=\"margin-left:  10px;\">\r\n                                        -> {{job.jobtype}}\r\n                                    </h4>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <h3>companies Name</h3>\r\n                            <div class=\"\">\r\n                                <div class=\"\">\r\n                                    <div class=\"left col-12 checkbox-area01\" *ngFor=\"let job of filter_compname \">\r\n                                        <h4 style=\"margin-left:  10px;\">\r\n                                            -> {{job.com_name}}\r\n                                        </h4>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div> <!-- filter-area-main -->\r\n\r\n                <div class=\"links-area-main left col-12\">\r\n                    <a routerLink=\"/Hotarticle\">\r\n                        <div class=\"links-area list-n left\">\r\n                            <ul class=\"links-area-ul\">\r\n\r\n                                <li><a class=\"hot-articles\"> Hot Articles </a></li>\r\n                                <li>- How to write a CV </li>\r\n                                <li>- How to apply GE </li>\r\n                                <li>- How to pass interview </li>\r\n\r\n                            </ul>\r\n                        </div>\r\n                    </a>\r\n                </div> <!-- links-area-main -->\r\n\r\n            </div>\r\n\r\n            <div *ngIf=\"getsearchedJob?.length\" class=\"mca-right-area left\">\r\n                <div class=\"heading03 left col-12\">\r\n                    <a class=\"left headings\" href=\"\">Searched Jobs</a>\r\n                    <a class=\"right text-underline\" (click)=\"getalljobs()\">See All Jobs</a>\r\n                </div>\r\n                <div class=\"left col-12 jobs-area list-n\">\r\n\r\n                    <ul class=\"jobs-area-ul\">\r\n\r\n                        <li *ngFor=\"let job of getsearchedJob | slice:0:10\">\r\n                            <a (click)=\"jobdetail(job._id)\">\r\n                                <div class=\"jobs-area-ul-dv\">\r\n                                    <div class=\"left jobs-area-ul-left-area\">\r\n                                        <i class=\"sa-fire\"></i>\r\n                                        <div style=\"overflow:hidden;\">\r\n                                            <a href=\"#\">Job Title :{{job.jobname}}</a>\r\n                                            <p>\r\n                                                <span class=\"span01\">\r\n                                                    <span class=\"sa-bold\">Company</span>\r\n                                                    <span class=\"span02\">:</span>\r\n                                                    <span>{{job.com_name}}</span>\r\n                                                </span>\r\n                                            </p>\r\n                                            <p>\r\n\r\n                                                <span class=\"span01\">\r\n                                                    <span class=\"sa-bold\">Job type</span>\r\n                                                    <span class=\"span02\">:</span>\r\n                                                    <span>{{job.jobtype}}</span>\r\n                                                </span><br>\r\n                                            </p>\r\n                                            <p>\r\n\r\n                                                <span class=\"span01\">\r\n                                                    <span class=\"sa-bold\">Due Date</span>\r\n                                                    <span class=\"span02\">:</span>\r\n                                                    <span>{{job.Due_date}}</span>\r\n                                                </span>\r\n                                            </p>\r\n\r\n                                            <p>\r\n                                                <span>\r\n                                                    <span class=\"sa-bold\">3-word pitch</span>\r\n                                                    <span class=\"span02\">:</span>\r\n                                                    <span>{{job.word_pitch}}</span>\r\n                                                </span>\r\n                                            </p>\r\n                                            <p>\r\n                                                <span>\r\n                                                    <span class=\"sa-bold\">Job Description</span>\r\n                                                    <span class=\"span02\">:</span>\r\n                                                    <span>{{job.job_description | slice:0:130}}</span>\r\n                                                </span>\r\n                                            </p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"right jobs-area-ul-right-area res-img\">\r\n                                        <img src=\"assets/images/shell.png\" />\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </a>\r\n                        </li>\r\n\r\n\r\n                    </ul>\r\n\r\n                    <div *ngIf=\"getsearchedJob.length >10\" class=\"left col-12 sa-pagination-main\">\r\n                        <ul class=\"sa-pagination\">\r\n                            <li class=\"sa-active\"><span>1</span></li>\r\n                            <li><a routerLink=\"/joblist\">Next</a></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n            <div *ngIf=\"!getsearchedJob?.length \" class=\"mca-right-area left\">\r\n                <div class=\"heading03 left col-12\">\r\n                    <a class=\"left headings\" href=\"\">Key Featured Jobs</a>\r\n                    <a class=\"right \" routerLink=\"/joblist\">See All Key Featured Jobs</a>\r\n                </div>\r\n                <h2 *ngIf=\"!joblist?.length\" style=\"color: rebeccapurple; line-height:50px;margin-left: 40%;\"> Sorry, No job\r\n                    Availvable !!</h2>\r\n                <div class=\"left col-12 jobs-area list-n\">\r\n\r\n                    <ul class=\"jobs-area-ul jobs-area-ul-spl\">\r\n                        <li *ngFor=\"let jobs of getfeaturedjob | slice:0:3\">\r\n                            <a (click)=\"jobdetail(jobs._id)\">\r\n                                <div class=\"jobs-area-ul-dv\">\r\n                                    <div class=\"left jobs-area-ul-left-area\">\r\n                                        <i class=\"sa-fire\"></i>\r\n                                        <div style=\"overflow:hidden;\">\r\n                                            <a>Job Title : {{jobs.jobname}}</a>\r\n                                            <p>\r\n                                                <span class=\"span01\">\r\n                                                    <span class=\"sa-bold\">Company</span>\r\n                                                    <span class=\"span02\">:</span>\r\n                                                    <span>{{jobs.com_name}}</span>\r\n                                                </span>\r\n                                            </p>\r\n                                            <p>\r\n\r\n                                                <span class=\"span01\">\r\n                                                    <span class=\"sa-bold\">Job type</span>\r\n                                                    <span class=\"span02\">:</span>\r\n                                                    <span>{{jobs.jobtype}}</span>\r\n                                                </span><br>\r\n                                            </p>\r\n                                            <p>\r\n\r\n                                                <span class=\"span01\">\r\n                                                    <span class=\"sa-bold\">Due Date</span>\r\n                                                    <span class=\"span02\">:</span>\r\n                                                    <span>{{jobs.Due_date}}</span>\r\n                                                </span>\r\n                                            </p>\r\n\r\n                                            <p>\r\n                                                <span>\r\n                                                    <span class=\"sa-bold\">3-word pitch</span>\r\n                                                    <span class=\"span02\">:</span>\r\n                                                    <span>{{jobs.word_pitch}}</span>\r\n                                                </span>\r\n                                            </p>\r\n                                            <p>\r\n                                                <span>\r\n                                                    <span class=\"sa-bold\">Job Description</span>\r\n                                                    <span class=\"span02\">:</span>\r\n                                                    <span>{{jobs.job_description | slice:0:130}}</span>\r\n                                                </span>\r\n                                            </p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"right jobs-area-ul-right-area res-img\">\r\n                                        <img src=\"assets/images/shell.png\" />\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </a>\r\n                        </li>\r\n\r\n\r\n                    </ul>\r\n\r\n                    <ul class=\"jobs-area-ul\">\r\n\r\n                        <li *ngFor=\"let job of getunfeaturedjob | slice:0:6\">\r\n                            <a (click)=\"jobdetail(job._id)\">\r\n                                <div class=\"jobs-area-ul-dv\">\r\n                                    <div class=\"left jobs-area-ul-left-area\">\r\n                                        <i class=\"sa-fire\"></i>\r\n                                        <div style=\"overflow:hidden;\">\r\n                                            <a href=\"#\">Job Title :{{job.jobname}}</a>\r\n                                            <p>\r\n                                                <span class=\"span01\">\r\n                                                    <span class=\"sa-bold\">Company</span>\r\n                                                    <span class=\"span02\">:</span>\r\n                                                    <span>{{job.com_name}}</span>\r\n                                                </span>\r\n                                            </p>\r\n                                            <p>\r\n\r\n                                                <span class=\"span01\">\r\n                                                    <span class=\"sa-bold\">Job type</span>\r\n                                                    <span class=\"span02\">:</span>\r\n                                                    <span>{{job.jobtype}}</span>\r\n                                                </span><br>\r\n                                            </p>\r\n                                            <p>\r\n\r\n                                                <span class=\"span01\">\r\n                                                    <span class=\"sa-bold\">Due Date</span>\r\n                                                    <span class=\"span02\">:</span>\r\n                                                    <span>{{job.Due_date}}</span>\r\n                                                </span>\r\n                                            </p>\r\n\r\n                                            <p>\r\n                                                <span>\r\n                                                    <span class=\"sa-bold\">3-word pitch</span>\r\n                                                    <span class=\"span02\">:</span>\r\n                                                    <span>{{job.word_pitch}}</span>\r\n                                                </span>\r\n                                            </p>\r\n                                            <p>\r\n                                                <span>\r\n                                                    <span class=\"sa-bold\">Job Description</span>\r\n                                                    <span class=\"span02\">:</span>\r\n                                                    <span>{{job.job_description | slice:0:130}}</span>\r\n                                                </span>\r\n                                            </p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"right jobs-area-ul-right-area res-img\">\r\n                                        <img src=\"assets/images/shell.png\" />\r\n                                    </div>\r\n                                </div>\r\n                            </a>\r\n                        </li>\r\n\r\n\r\n                    </ul>\r\n\r\n                    <div *ngIf=\"joblist.length > 6\" class=\"left col-12 sa-pagination-main\">\r\n                        <ul class=\"sa-pagination\">\r\n                            <li class=\"sa-active\"><span>1</span></li>\r\n                            <li><a routerLink=\"/joblist\">Next</a></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</section>\r\n<app-footer></app-footer>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-interview',\n  templateUrl: './interview.component.html',\n  styleUrls: ['./interview.component.css']\n})\nexport class InterviewComponent implements OnInit {\n  getinterviews:boolean;\n  getcvs:boolean=true;\n  getges:boolean;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  getcv(){\n    this.getcvs=true;\n    this.getges=false;\n    this.getinterviews=false;\n\n  }\n\n  getge(){\n    this.getcvs=false;\n    this.getges=true;\n    this.getinterviews=false;\n  }\n  getinterview(){\n\n    this.getcvs=false;\n    this.getges=false;\n    this.getinterviews=true;\n  }\n}\n","<app-header></app-header>\n\n<section class=\"main-content-area01 left col-12\">\n    <div class=\"row\">\n        <div class=\"left col-12\">\n            <div class=\"left col-12 company-cover-image\">\n                <div class=\"cci-area01\">\n                    <img class=\"cvr-img-class\" src=\"assets/images/cover-img.jpg\"/>\n                     \n                </div>\n                \n            </div> <!-- company-cover-image-area -->\n        \n            <div class=\"mca-left-area left\">\n                \n                 \n                \n                <!-- <div class=\"links-area-main left col-12\">\n                    <div class=\"links-area list-n left\">\n                        <ul class=\"links-area-ul\">\n                            <li><a class=\"hot-articles\" href=\"#\">Hot Articles for This Company</a></li>\n                            <li><a href=\"#\">Tips to Apply?</a></li>\n                            <li><a href=\"#\">Tips For Interview </a></li>\n                            <li><a href=\"#\">What's insider say?</a></li>\n                            <li><a href=\"#\">How to pass interview </a></li>\n                            <li><a href=\"#\">More... </a></li>\n                        </ul>\n                    </div>\n                </div>  --> <!-- links-area-main -->\n                \n                <div class=\"links-area-main left col-12\">\n                    <div class=\"links-area list-n left\">\n                        <ul class=\"links-area-ul\">\n                            <li><a class=\"hot-articles\" routerLink=\"/interview\"> Hot Articles </a></li>\n                            <li><a (click)=\"getcv()\">-  How to write a CV </a></li>\n                            <li><a (click)=\"getge()\">-  How to apply GE </a></li>\n                            <li><a (click)=\"getinterview()\" >-  How to pass interview </a></li>\n                            \n                            \n                            \n                        </ul>\n                    </div>\n                </div>  <!-- links-area-main -->\n            </div>\n            \n            <div *ngIf=\"getges\" class=\"mca-right-area left\">\n                \n                <div class=\"right-full-width-area left col-12\">\n                    <h2>How to apply GE</h2>\n                <br>\n                    <p class=\"p-graph-text\">\n\n                        The process can be lengthy, up to 3-4 months. Hiring process takes weeks, sometimes months. Very indepth interview and background checks. Took two to three weeks. <br><br>\n\n                        1. Research us on the internet.<br>\n                        2. Find your perfect career.<br>\n                        3. Submit your application.<br>\n                        4. Talk with a recruiter.<br>\n                        5. Talk with a hiring manager.<br>\n                        6. Take part in a panel.<br>\n                        7. Get hired!<br>\n                \n                    </p>\n                    \n                    \n                </div>\n                \n                \n                 \n                \n                 \n                \n            </div>\n            <div *ngIf=\"getcvs\" class=\"mca-right-area left\">\n                \n                <div class=\"right-full-width-area left col-12\">\n                    <h2>How to write a CV</h2>\n                <br>\n                    <p class=\"p-graph-text\"> \n                        \n                        A standard format of a CV for a job should include the following sections:<br><br>\n\n                        1. Contact Information.<br>\n                        2. Personal Statement.<br>\n                        3. Professional Experience.<br>\n                        4. Academic History.<br>\n                        5. Key Skills and Qualifications.<br>\n                        6. Industry Awards.<br>\n                        7. Professional Certifications.<br>\n                        8. Publications.<br>\n                        9. Professional Affiliations.<br>\n                        10. Conferences Attended.<br>\n                        11. Additional Training.\n                        \n                \n                    </p>\n                    \n                    \n                </div>\n                \n                \n                 \n                \n                 \n                \n            </div>\n            <div *ngIf=\"getinterviews\" class=\"mca-right-area left\">\n                \n                <div class=\"right-full-width-area left col-12\">\n                    <h2>How to pass interview</h2>\n                <br>\n                    <p class=\"p-graph-text\"> \n                        \n                \n                        Being invited to an interview means that the hiring team has reviewed your resume and recognizes your potential but they want to know more about what you could bring to the position. Here are some ways to present your best self in an interview and increase your chances of being hired: <br><br>\n\n                        1. Conduct thorough research.<br>\n                        2. Dress for the job you want.<br>\n                        3. Take your time.<br>\n                        4. Bring a notepad and pen.<br>\n                        5. Use facts and figures to demonstrate your achievements.<br>\n                        6. Be prepared for difficult questions.<br>\n                        7. Prepare your own questions.<br>\n                    </p>\n                    \n                    \n                </div>\n                \n                \n                 \n                \n                 \n                \n            </div>\n        \n        </div>\n    </div>\n</section>\n\n<app-footer></app-footer>","import { AfterContentInit, AfterViewInit, Component, DoCheck, OnDestroy, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from \"@angular/router\"\nimport {joblist} from \"../../model/joblist-model\";\nimport {JobreduxService} from \"../../service/job-redux\";\nimport {applyjob} from \"../../model/applyJob\"\nimport {AccountService} from \"../../service/account.service\"\n@Component({\n  selector: 'app-jobdetails',\n  templateUrl: './jobdetails.component.html',\n  styleUrls: ['./jobdetails.component.css']\n})\nexport class JobdetailsComponent implements OnInit ,AfterContentInit, OnDestroy, DoCheck{\n  applyjobdetail:applyjob;\n  similarjobs:joblist[]=[];\n  jobdetail: joblist[]=[];\n  id:string;\n  arrayslice:number=2;\n\n  constructor(private route:ActivatedRoute,private router:Router, private ReduxService:JobreduxService, private service:AccountService ) {\n\n    this.id= this.route.snapshot.paramMap.get(\"id\");\n   }\n\n  ngOnInit(): void {\n    \n    this.getupdatedetail();\n    \n  }\n  ngDoCheck(){\n    this.id= this.route.snapshot.paramMap.get(\"id\");\n  }\n  ngOnDestroy(){\n    this.jobdetail=[];\n    this.similarjobs=[];\n  }\n\n  ngAfterContentInit(){\n    this.getSimilarJobs();\n\n  }\n \n\n  getSimilarJobs(){\n\n    let similarjob=this.jobdetail[0].jobtype;\n    // console.log(similarjob);\n   const getjobslist$ = this.ReduxService.getalljobs(false)[1];\n   getjobslist$.subscribe(data=>{\n    //  console.log(data);\n     data.forEach(element => {\n       if(element.jobtype == similarjob ){\n         this.similarjobs.push(element);\n        //  console.log(this.similarjobs);\n       }\n     });\n   })\n  }\n\n  getupdatedetail(){\n\n    const getjobslist$ = this.ReduxService.getalljobs(false)[1];\n    const getjobsError$ = this.ReduxService.getalljobs(false)[2];\n    \n    getjobslist$.subscribe(result=>{\n      result.forEach(element => {\n        if(element._id == this.id ){\n          this.jobdetail.push(element);\n        }\n         \n      });\n\n\n      // console.log(this.jobdetail);\n    }),error=>{\n      getjobsError$.subscribe(data=>{\n        console.log(data);\n      })\n    }\n  }\n  jobdetails(id){\n    // console.log(id);\n    this.router.navigate([\"/jobdetail\", { id }]);\n  }\n  loadless(){\n    this.arrayslice=2;\n    \n  }\n\n  loadmore(){\n    this.arrayslice=100;\n    \n  }\n  applyjob(val){\n    let valid:boolean=true;\n    // console.log(this.id);\n    val.job_id=this.id;\n    this.applyjobdetail=val;\n    // console.log(this.applyjobdetail);\n    var email_regex=/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    if(this.applyjobdetail.app_name == \"\" || this.applyjobdetail.app_name == null){\n      alert(\"Please enter correct applicant name\");\n      valid=false;\n    }\n    else if(this.applyjobdetail.app_email == \"\" || this.applyjobdetail.app_email == null){\n      alert(\"Please Enter email\");\n      valid=false\n    }\n    else if(!email_regex.test(this.applyjobdetail.app_email)){\n      alert(\"Please enter valid email\");\n      valid=false;\n    }\n    else if(this.applyjobdetail.app_number == null || this.applyjobdetail.app_number.toString().length < 10){\n      alert(\"please enter valid phone Number\");\n      valid=false;\n    }\n    else if(this.applyjobdetail.cov_letter == \"\"|| this.applyjobdetail.cov_letter == null || this.applyjobdetail.cov_letter.length < 20){\n      alert(\"Please enter minimum 20 character in cover letter\");\n      valid=false;\n    }\n    else if(valid){\n      const getapplyJobResponce$=this.service.applyJobs(this.applyjobdetail);\n      getapplyJobResponce$.subscribe(data=>{\n        // console.log(data.status);\n        if(data.status == true){\n          alert(\"Applied Successfully\");\n        }\n        else{\n          alert(\"something went wrong\");\n        }\n      })\n      \n    }\n  }\n  \n}\n","<app-header></app-header>\n\n <section class=\"main-content-area01 left col-12\">\n    <div class=\"row\">\n        <div class=\"left col-12\">\n            <div class=\"left col-12 company-cover-image\">\n                <div class=\"cci-area01\">\n                    <img class=\"cvr-img-class\" src=\"assets/images/cover-img.jpg\" />\n                    <div class=\"cci-area02\">\n                        <div class=\"cci-area02-logo res-img\"><img src=\"assets/images/shell.png\" /></div>\n                        <div class=\"cci-area02-text\"><span><a>{{jobdetail[0].com_name}}</a></span></div>\n                    </div>\n                </div>\n\n            </div> <!-- company-cover-image-area -->\n\n            <div class=\"mca-left-area left\">\n\n                <div class=\"company-des\">\n                    <div class=\"heading02\">\n                        <h4>{{jobdetail[0].com_name}}</h4>\n                    </div>\n\n                    <div class=\"company-des-area list-n left\">\n                        <ul class=\"company-des-area-ul\">\n                            <li><a href=\"#\"><b>Job Name :</b>{{jobdetail[0].jobname}}</a></li>\n                            <li><a href=\"#\"><b>Job type :</b> {{jobdetail[0].jobtype}}</a></li>\n                            <li><a href=\"#\"><b>Due Date :</b> {{jobdetail[0].Due_date}}</a></li>\n                            <li><a href=\"#\"><b>Company Email :</b><a>{{jobdetail[0].com_email}}</a></a></li>\n                            <li><a href=\"#\"><b>Company Location :</b>{{jobdetail[0].com_location}}</a></li>\n\n                        </ul>\n                    </div>\n                </div> <!-- company-des -->\n\n\n                <div class=\"links-area-main left col-12\">\n                    <a routerLink=\"/Hotarticle\">\n                        <div class=\"links-area list-n left\">\n                            <ul class=\"links-area-ul\">\n\n                                <li><a class=\"hot-articles\"> Hot Articles </a></li>\n                                <li>- How to write a CV </li>\n                                <li>- How to apply GE </li>\n                                <li>- How to pass interview </li>\n\n                            </ul>\n                        </div>\n                    </a>\n                </div>  <!-- links-area-main -->\n            </div>\n\n            <div class=\"mca-right-area left\">\n\n                <div class=\"right-full-width-area left col-12\">\n                    <h2>{{jobdetail[0].jobname}}</h2><br />\n                    <p class=\"p-graph-text\"><b> Job Description :</b><br />{{jobdetail[0].job_description}}\n                    </p>\n\n\n                    <br><br>\n                    <br><br>\n                    <form #appform=\"ngForm\" (ngSubmit)=\"applyjob(appform.value) \">\n                        <div class=\"forem-padding left\">\n                            <h2 class=\" align-center\">Apply for this job</h2>\n                            <div class=\"sa-signup-form left col-12 form-select\">\n                                <div class=\"sa-signup-form-left left\">\n\n                                    <label class=\"name\">Your Name<span>*</span></label>\n                                    <input type=\"name\" name=\"app_name\" class=\"sa-input col-12\" ngModel  required>    \n                                </div>\n                                \n                                <div class=\"sa-signup-form-right right \">\n                                    <label class=\"name\">Your Phone<span>*</span></label>\n                                    <input type=\"text\"  name=\"app_number\" maxlength=\"10\"  class=\"sa-input col-12\" ngModel required  >\n                                </div>\n                                <div class=\"sa-signup-form-left left\">\n\n                                    <label class=\"name\">Your Email<span>*</span></label>\n                                    <input type=\"email\" name=\"app_email\" class=\"sa-input col-12\"  ngModel required >\n\n                                </div>\n                                <div class=\"sa-signup-form-right right\">\n                                    <label class=\"name\">Cover Letter<span>*</span></label>\n                                    <textarea type=\"name\" name=\"cov_letter\" class=\"sa-input col-12\"  ngModel required>\n\n                                    </textarea>\n                                </div>\n                            </div>\n\n                            <div class=\"left col-12\">\n                                <div class=\"sa-btn-location\">\n                                    <a (click)=\"applyjob(appform.value)\" class=\"sa-btn\">Apply</a>\n                                </div>\n                            </div>\n                        </div>\n                    </form>\n\n                </div>\n\n\n                <div class=\"heading03 left col-12\">\n                    <a class=\"left headings\" href=\"#\">Similar Type Jobs </a>\n                </div>\n\n                <div class=\"left col-12 jobs-area list-n\">\n\n                    <ul class=\"jobs-area-ul\">\n                        \n                        <li *ngFor=\"let job of similarjobs | slice:0:arrayslice\">\n                            <a (click)=\"jobdetails(job._id)\" >\n                                <div class=\"jobs-area-ul-dv\">\n                                    <div class=\"left jobs-area-ul-left-area\">\n                                            <i class=\"sa-fire\"></i>\n                                            <div style=\"overflow:hidden;\">\n                                                <a >Job Title :{{job.jobname}}</a>\n                                                <p>\n                                                    <span class=\"span01\">\n                                                        <span class=\"sa-bold\">Company</span>\n                                                        <span class=\"span02\">:</span> \n                                                        <span>{{job.com_name}}</span>\n                                                    </span>\n                                                </p>\n                                                <p>\n\n                                                    <span class=\"span01\">\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n                                                        <span class=\"sa-bold\">Job type</span>\n                                                        <span class=\"span02\">:</span> \n                                                        <span>{{job.jobtype}}</span>\n                                                    </span><br>\n                                                </p>\n                                                <p>\n\n                                                    <span class=\"span01\">\n                                                        <span class=\"sa-bold\">Due Date</span>\n                                                        <span class=\"span02\">:</span> \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n                                                        <span>{{job.Due_date}}</span>\t\n                                                    </span>\n                                                </p>\n                                                \n                                                <p>\n                                                    <span>\n                                                        <span class=\"sa-bold\">3-word pitch</span>\n                                                        <span class=\"span02\">:</span> \n                                                        <span>{{job.word_pitch}}</span>\n                                                    </span>\n                                                </p>\n                                                <p>\n                                                    <span>\n                                                        <span class=\"sa-bold\">Job Description</span>\n                                                        <span class=\"span02\">:</span> \n                                                        <span>{{job.job_description | slice:0:130}}</span>\n                                                    </span>\n                                                </p>\n                                                \n                                            </div>\n                                    </div>\n                                    <div  class=\"right jobs-area-ul-right-area res-img\">\n                                        <img src=\"assets/images/shell.png\"/>\n                                        \n                                    </div>\n                                </div>\n                            \n                            </a>    \n                        </li>   \n                    </ul>\n                    <div *ngIf=\"similarjobs.length > 2\" class=\"left col-12 sa-pagination-main\">\n                        <ul class=\"sa-pagination\">\n                            \n                            <a *ngIf=\"arrayslice < 3\" (click)=\"loadmore()\"><li class=\"sa-active\"><span>Load All</span></li></a>\n                            <a *ngIf=\"arrayslice > 3\" (click)=\"loadless()\"><li class=\"sa-active\"><span>Load less</span></li></a>\n                            \n                        </ul>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    </div>\n</section> \n\n<app-footer></app-footer>","import { AfterContentInit, Component, DoCheck, Input, OnDestroy, OnInit } from '@angular/core';\nimport { joblist } from 'src/app/model/joblist-model';\nimport { AccountService } from '../../service/account.service'\nimport { Router } from '@angular/router';\nimport { JobreduxService } from 'src/app/service/job-redux';\nimport { Store } from '@ngrx/store';\nimport { getloginloading, getlogivalues } from 'src/app/Selectors/login-selector';\nimport { error } from '@angular/compiler/src/util';\nimport { DeleteJob } from 'src/app/actions/joblist-action';\n\n@Component({\n  selector: 'app-joblist',\n  templateUrl: './joblist.component.html',\n  styleUrls: ['./joblist.component.css']\n})\nexport class JoblistComponent implements OnInit,AfterContentInit, OnDestroy {\n\n  joblist: joblist[];\n  getfeaturedjob: joblist[] = [];\n  getunfeaturedjob:joblist[]=[];\n  experience: Array<number> = [1, 2, 3, 4, 5];\n  filterjob: Array<any>;\n  filterJob_location: Array<any>;\n  filter_experience:Array<any>;\n  filter_compname:Array<any>\n  getsearchedJob: joblist[] = [];\n  adminame: string;\n  socialShare: any;\n  adminid:string;\n  adminjobs:joblist[]=[];\n  arrayslice:number=6;\n  adminslice:number=12;\n  searchslice:number=12;\n  constructor(private router: Router, private ReduxService: JobreduxService, private service:AccountService, private store:Store) { }\n\n  ngOnInit(): void {\n    this.getAllJobList();\n    this.getfeaturedjobs();\n    this.getunfeaturedjobs();\n\n  }\n  ngAfterContentInit(){\n    this.getloginvalue();\n  }\n  ngOnDestroy(){\n    this.adminjobs=[];\n    this.getsearchedJob=[];\n  }\n \n\n  jobdetail(id){\n    // console.log(id);\n    this.router.navigate([\"/jobdetail\", { id }]);\n  }\n  getloginvalue(){\n\n    const loginloading$=this.store.select(getloginloading)\n    loginloading$.subscribe(data=>{\n      // console.log(data);\n    });\n    const loginvalues$=this.store.select(getlogivalues);\n    loginvalues$.subscribe(data=>{\n      // console.log(data);\n      if(!data.result){\n        this.adminame=data.name;\n        this.adminid=data.id ; \n       }\n       else{\n        this.adminame=data.result[0].username;\n        this.adminid=data.result[0]._id;\n       }\n    })\n  }\n\n  getMyjobs() {\n    if (!this.adminame) {\n      alert(\"You have to login first to get Your Jobs\");\n    }\n    else{\n      const getjobslist$ = this.ReduxService.getalljobs(false)[1];\n      const getjobsError$ = this.ReduxService.getalljobs(false)[2];\n      getjobslist$.subscribe(data=>{\n        // console.log(data);\n        if(!this.adminjobs?.length){\n\n          data.forEach(element => {\n            // console.log(this.adminid);\n            // console.log(element.admin);\n            if((element.admin == this.adminid)){\n              this.adminjobs.push(element);\n              // console.log(this.adminjobs);\n            }\n          });\n        }\n      \n        if(!this.adminjobs?.length){\n          alert(\"You have not posted any job\");\n        }\n      }),error=>{\n        getjobsError$.subscribe(data=>{\n          console.log(data);\n        })\n      }\n    }\n  }\n\n  joblocation(val){\n    console.log(val);\n  }\n\n  getAccount() {\n    if (!this.adminame) {\n      alert(\"You should have to login First\")\n    }\n    else {\n      let id={\"id\":this.adminid}\n      console.log(this.adminid);\n      this.router.navigate([\"/Account\" , id ]);\n    }\n    \n  }\n\n  setfavorite(id) {\n    console.log(id);\n  }\n\n  delete(id) {\n    var val=`?id=${id}`\n    const deletejob$=this.service.Deletejob(val);\n    deletejob$.subscribe(data=>{\n      if(data.status == true){\n        this.adminjobs.splice(id);\n        this.ReduxService.getalljobs(true);\n        // this.store.dispatch(new DeleteJob(id));\n        alert(\"job Successfully deleted\");\n      }\n      \n    })\n  }\n\n  update(id) {\n    this.router.navigate([\"/UpdateJob\", { id }]);\n  }\n\n  getalljobs() {\n    this.getsearchedJob = [];\n    this.adminjobs=[];\n  }\n\n  onSearch(val) {\n\n    const getjobslist$ = this.ReduxService.getalljobs(false)[1];\n    const getjobsError$ = this.ReduxService.getalljobs(false)[2];\n    getjobslist$.subscribe(data => {\n      \n      if(!this.getsearchedJob?.length){\n      data.forEach(element => {\n        if (element.jobtype.toUpperCase() == val.searchJob.toUpperCase()) {\n          this.getsearchedJob.push(element);\n        }\n        if (element.com_name.toUpperCase() == val.searchJob.toUpperCase()) {\n          this.getsearchedJob.push(element);\n        }\n        if (element.com_location.toUpperCase() == val.searchJob.toUpperCase()) {\n          this.getsearchedJob.push(element);\n        }\n      });\n    }\n    if(!this.getsearchedJob?.length){\n    \n      alert(`Not Found ${val.searchJob}`);\n    }\n    })\n\n    // const getjob$ = this.service.getsearchedjob(val);\n    // getjob$.subscribe(data => {\n    //   if (data.code == 'false') {\n    //     alert(`No job Available of type ${val.searchJob}`);\n    //   }\n    //   else {\n    //     this.getsearchedJob = data.result;\n    //     // console.log(this.getsearchedJob);\n    //   }\n\n    // })\n  }\n  getfeaturedjobs() {\n    const getjobslist$ = this.ReduxService.getalljobs(false)[1];\n    const getjobsError$ = this.ReduxService.getalljobs(false)[2];\n    getjobslist$.subscribe(data => {\n      if(!this.getfeaturedjob?.length){\n      data.forEach(element => {\n        if (element.featured == true) {\n          this.getfeaturedjob.push(element);\n        }\n      });\n      }\n    }), error => {\n      getjobsError$.subscribe(data => {\n        alert(data);\n      })\n    }\n  }\n  getunfeaturedjobs() {\n    const getjobslist$ = this.ReduxService.getalljobs(false)[1];\n    const getjobsError$ = this.ReduxService.getalljobs(false)[2];\n    getjobslist$.subscribe(data => {\n      if(!this.getunfeaturedjob?.length){\n      data.forEach(element => {\n        if (element.featured == false) {\n          this.getunfeaturedjob.push(element);\n        }\n      });\n      }\n    }), error => {\n      getjobsError$.subscribe(data => {\n        alert(data);\n      })\n    }\n  }\n  getAllJobList() {\n    const getjobsloading$ = this.ReduxService.getalljobs(false)[0];\n    const getjobslist$ = this.ReduxService.getalljobs(false)[1];\n    const getjobsError$ = this.ReduxService.getalljobs(false)[2];\n    getjobsloading$.subscribe(data => {\n      // console.log(data);\n    })\n    getjobslist$.subscribe(data => {\n      // console.log(data);\n      this.joblist = data;\n      // console.log(this.joblist);\n\n      var filterjob = []\n      this.joblist.forEach(item => {\n        let count = filterjob.filter(x => x.jobtype.toUpperCase() == item.jobtype.toUpperCase()).length\n\n        if (count == 0) {\n          filterjob.push(item)\n        }\n      })\n\n      var filter_location = []\n      this.joblist.forEach(item => {\n        let count = filter_location.filter(x => x.com_location.toUpperCase() == item.com_location.toUpperCase()).length\n\n        if (count == 0) {\n          filter_location.push(item)\n        }\n      })\n\n      var filter_experience = []\n      this.joblist.forEach(item => {\n        let count = filter_experience.filter(x => x.com_location == item.com_location).length\n\n        if (count == 0) {\n          filter_experience.push(item)\n        }\n      })\n      var filter_compname = []\n      this.joblist.forEach(item => {\n        let count = filter_compname.filter(x => x.com_location.toUpperCase() == item.com_location.toUpperCase()).length\n\n        if (count == 0) {\n          filter_compname.push(item)\n        }\n      })\n      this.filter_compname=filter_compname;\n      this.filter_experience=filter_experience;\n      this.filterjob = filterjob;\n      this.filterJob_location = filter_location;\n      // console.log(this.filterjob);\n      // console.log(this.filterJob_location);\n\n    }), error => {\n      getjobsError$.subscribe(data => {\n        alert(data);\n      })\n    }\n  }\n  loadless(){\n    this.arrayslice=6;\n    this.adminslice=12;\n    this.searchslice=12;\n  }\n\n  loadmore(){\n    this.arrayslice=100;\n    this.adminslice=100;\n    this.searchslice=100;\n  }\n}\n","<app-header></app-header>\n\n<section class=\"main-content-area01 left col-12\">\n    <div class=\"row\">\n        <div class=\"left col-12\">\n            <div class=\"mca-left-area left\">\n\n                <div class=\"dashboard\">\n                    <div class=\"heading02\">\n                        <h4><i class=\"fa fa-th-large left\"></i>Personal Dashboard</h4>\n                    </div>\n\n                    <div class=\"dashboard-area list-n left\">\n                        <ul class=\"dashboard-area-ul\">\n                            <li><a (click)=\"getMyjobs()\">+ My Jobs <span\n                                        *ngIf=\"adminjobs?.length\">[{{adminjobs.length}}]</span></a></li>\n                            <li><a (click)=\"getAccount()\">+ Account Setting</a></li>\n                        </ul>\n                    </div>\n                </div> <!-- Dashboard -->\n\n                <div class=\"filter-area-main\">\n                    <!-- <div class=\"heading01\">\n                        <h4>Filter For More Detail</h4>\n                    </div> -->\n                    <div class=\"filter-area left\">\n\n                        <div id=\"accordion\">\n                            <h3>Job location Available</h3>\n                            <div class=\"\">\n                                <div class=\"left col-12 checkbox-area01\" *ngFor=\"let job of filterJob_location \">\n                                    <h4 style=\"margin-left:  10px;\">\n                                        -> {{job.com_location}}\n                                    </h4>\n                                </div>\n\n                            </div>\n                            <h3> Experience Wise Jobs Available</h3>\n                            <div class=\"\">\n                                <div class=\"left col-12 checkbox-area01\" *ngFor=\"let exp of filter_experience\">\n                                    <h4 style=\"margin-left:  10px;\">\n                                        -> {{exp.experince}}\n                                    </h4>\n                                </div>\n                            </div>\n\n                            <h3>Job Type Available</h3>\n                            <div class=\"\">\n                                <div class=\"left col-12 checkbox-area01\" *ngFor=\"let job of filterjob \">\n                                    <h4 style=\"margin-left:  10px;\">\n                                        -> {{job.jobtype}}\n                                    </h4>\n                                </div>\n\n                            </div>\n\n                            <h3>companies Name</h3>\n                            <div class=\"\">\n                                <div class=\"\">\n                                    <div class=\"left col-12 checkbox-area01\" *ngFor=\"let job of filter_compname \">\n                                        <h4 style=\"margin-left:  10px;\">\n                                            -> {{job.com_name}}\n                                        </h4>\n                                    </div>\n                                </div>\n\n                            </div>\n\n                        </div>\n\n                    </div>\n                </div> <!-- filter-area-main -->\n\n\n                <div class=\"links-area-main left col-12\">\n                    <a routerLink=\"/Hotarticle\">\n                        <div class=\"links-area list-n left\">\n                            <ul class=\"links-area-ul\">\n\n                                <li><a class=\"hot-articles\"> Hot Articles </a></li>\n                                <li>- How to write a CV </li>\n                                <li>- How to apply GE </li>\n                                <li>- How to pass interview </li>\n\n                            </ul>\n                        </div>\n                    </a>\n                </div> <!-- links-area-main -->\n\n            </div>\n            <div *ngIf=\"adminjobs?.length\" class=\"mca-right-area left\">\n                <div class=\"main-search left col-12\">\n                    <form #searchbox=\"ngForm\" (ngSubmit)=\"onSearch(searchbox.value)\" id=\"mainsearch\"\n                        style=\"position:relative;\">\n                        <input class=\"search01\" type=\"text\" autocomplete=\"off\" value=\"\"\n                            placeholder=\"Search Job Type,job Location, Company Name\" name=\"searchJob\" ngModel\n                            #searchbox=\"ngModel\">\n                        <i class=\"fa fa-search\"></i>\n                    </form>\n                </div>\n                <div class=\"heading03 left col-12\">\n                    <a class=\"left headings\">Your Jobs</a>\n                    <a class=\"right text-underline\" (click)=\"getalljobs()\">See All Jobs</a>\n                </div>\n                <div class=\"left col-12 jobs-area list-n\">\n\n                    <ul class=\"jobs-area-ul\">\n\n                        <li *ngFor=\"let job of adminjobs | slice:0:adminslice\">\n\n                            <div class=\"jobs-area-ul-dv\">\n                                <a (click)=\"jobdetail(job._id)\">\n                                    <div class=\"left jobs-area-ul-left-area\">\n                                        <i class=\"sa-fire\"></i>\n                                        <div style=\"overflow:hidden;\">\n                                            <a href=\"#\">Job Title :{{job.jobname}}</a>\n                                            <p>\n                                                <span class=\"span01\">\n                                                    <span class=\"sa-bold\">Company</span>\n                                                    <span class=\"span02\">:</span>\n                                                    <span>{{job.com_name}}</span>\n                                                </span>\n                                            </p>\n                                            <p>\n\n                                                <span class=\"span01\">\n                                                    <span class=\"sa-bold\">Job type</span>\n                                                    <span class=\"span02\">:</span>\n                                                    <span>{{job.jobtype}}</span>\n                                                </span><br>\n                                            </p>\n                                            <p>\n\n                                                <span class=\"span01\">\n                                                    <span class=\"sa-bold\">Due Date</span>\n                                                    <span class=\"span02\">:</span>\n                                                    <span>{{job.Due_date}}</span>\n                                                </span>\n                                            </p>\n\n                                            <p>\n                                                <span>\n                                                    <span class=\"sa-bold\">3-word pitch</span>\n                                                    <span class=\"span02\">:</span>\n                                                    <span>{{job.word_pitch}}</span>\n                                                </span>\n                                            </p>\n                                            <p>\n                                                <span>\n                                                    <span class=\"sa-bold\">Job Description</span>\n                                                    <span class=\"span02\">:</span>\n                                                    <span>{{job.job_description | slice:0:130}}</span>\n                                                </span>\n                                            </p>\n                                        </div>\n                                    </div>\n                                </a>\n                                <div *ngIf=\"!adminame\" class=\"right jobs-area-ul-right-area res-img\">\n                                    <img src=\"assets/images/shell.png\" />\n\n                                </div>\n                                <div *ngIf=\"adminame\" class=\"right jobs-area-ul-right-area res-img\">\n\n                                    <button type=\"button\" class=\"btn btn-danger\"\n                                        (click)=\"delete(job._id)\">Delete</button><br>\n\n                                    <button type=\" button\" class=\"btn\"\n                                        style=\"background-color: rgb(101, 242, 247);color:black; margin-top: 30px;\"\n                                        (click)=\"update(job._id)\">Update</button>\n                                </div>\n                            </div>\n\n                        </li>\n\n\n                    </ul>\n\n                    <div *ngIf=\"adminjobs.length > 12\" class=\"left col-12 sa-pagination-main\">\n                        <ul class=\"sa-pagination\">\n\n                            <a *ngIf=\"adminslice < 13\" (click)=\"loadmore()\">\n                                <li class=\"sa-active\"><span>Load All</span></li>\n                            </a>\n                            <a *ngIf=\"adminslice > 13\" (click)=\"loadless()\">\n                                <li class=\"sa-active\"><span>Load less</span></li>\n                            </a>\n\n                        </ul>\n                    </div>\n                </div>\n            </div>\n\n            <div *ngIf=\"getsearchedJob?.length\" class=\"mca-right-area left\">\n                <div class=\"main-search left col-12\">\n                    <form #searchbox=\"ngForm\" (ngSubmit)=\"onSearch(searchbox.value)\" id=\"mainsearch\"\n                        style=\"position:relative;\">\n                        <input class=\"search01\" type=\"text\" autocomplete=\"off\" value=\"\" placeholder=\"Search Job Type\"\n                            name=\"searchJob\" ngModel #searchbox=\"ngModel\">\n                        <i class=\"fa fa-search\"></i>\n                    </form>\n                </div>\n                <div class=\"heading03 left col-12\">\n                    <a class=\"left headings\">Searched Jobs</a>\n                    <a class=\"right text-underline\" (click)=\"getalljobs()\">See All Jobs</a>\n                </div>\n                <div class=\"left col-12 jobs-area list-n\">\n\n                    <ul class=\"jobs-area-ul\">\n\n                        <li *ngFor=\"let job of getsearchedJob | slice:0:searchslice\">\n                            <a (click)=\"jobdetail(job._id)\">\n                                <div class=\"jobs-area-ul-dv\">\n                                    <div class=\"left jobs-area-ul-left-area\">\n                                        <i class=\"sa-fire\"></i>\n                                        <div style=\"overflow:hidden;\">\n                                            <a href=\"#\">Job Title :{{job.jobname}}</a>\n                                            <p>\n                                                <span class=\"span01\">\n                                                    <span class=\"sa-bold\">Company</span>\n                                                    <span class=\"span02\">:</span>\n                                                    <span>{{job.com_name}}</span>\n                                                </span>\n                                            </p>\n                                            <p>\n\n                                                <span class=\"span01\">\n                                                    <span class=\"sa-bold\">Job type</span>\n                                                    <span class=\"span02\">:</span>\n                                                    <span>{{job.jobtype}}</span>\n                                                </span><br>\n                                            </p>\n                                            <p>\n\n                                                <span class=\"span01\">\n                                                    <span class=\"sa-bold\">Due Date</span>\n                                                    <span class=\"span02\">:</span>\n                                                    <span>{{job.Due_date}}</span>\n                                                </span>\n                                            </p>\n\n                                            <p>\n                                                <span>\n                                                    <span class=\"sa-bold\">3-word pitch</span>\n                                                    <span class=\"span02\">:</span>\n                                                    <span>{{job.word_pitch}}</span>\n                                                </span>\n                                            </p>\n                                            <p>\n                                                <span>\n                                                    <span class=\"sa-bold\">Job Description</span>\n                                                    <span class=\"span02\">:</span>\n                                                    <span>{{job.job_description | slice:0:130}}</span>\n                                                </span>\n                                            </p>\n\n                                        </div>\n                                    </div>\n                                    <div class=\"right jobs-area-ul-right-area res-img\">\n                                        <img src=\"assets/images/shell.png\" />\n\n                                    </div>\n                                </div>\n                            </a>\n                        </li>\n\n\n                    </ul>\n\n                    <div *ngIf=\"getsearchedJob.length > 12\" class=\"left col-12 sa-pagination-main\">\n                        <ul class=\"sa-pagination\">\n\n                            <a *ngIf=\"adminslice < 13\" (click)=\"loadmore()\">\n                                <li class=\"sa-active\"><span>Load All</span></li>\n                            </a>\n                            <a *ngIf=\"adminslice > 13\" (click)=\"loadless()\">\n                                <li class=\"sa-active\"><span>Load less</span></li>\n                            </a>\n\n                        </ul>\n                    </div>\n                </div>\n            </div>\n\n            <div *ngIf=\"!getsearchedJob?.length && !adminjobs?.length \" class=\"mca-right-area left\">\n                <div class=\"main-search left col-12\">\n                    <form #searchbox=\"ngForm\" (ngSubmit)=\"onSearch(searchbox.value)\" id=\"mainsearch\"\n                        style=\"position:relative;\">\n                        <input class=\"search01\" type=\"text\" autocomplete=\"off\" value=\"\" placeholder=\"Search Job Type\"\n                            name=\"searchJob\" ngModel #searchbox=\"ngModel\">\n                        <i class=\"fa fa-search\"></i>\n                    </form>\n                </div>\n                <div class=\"heading03 left col-12\">\n                    <a class=\"left headings\">Key Featured Jobs</a>\n                    <a class=\"right \">See All Key Featured Jobs</a>\n                </div>\n\n                <h2 *ngIf=\"!joblist?.length\" style=\"color: rebeccapurple; line-height:50px;margin-left: 40%;\"> Sorry, No job\n                    Availvable !!</h2>\n                    <div class=\"left col-12 jobs-area list-n\">\n\n                    <ul class=\"jobs-area-ul jobs-area-ul-spl\">\n                        <li *ngFor=\"let jobs of getfeaturedjob | slice:0:arrayslice\">\n                            <a (click)=\"jobdetail(jobs._id)\">\n                                <div class=\"jobs-area-ul-dv\">\n                                    <div class=\"left jobs-area-ul-left-area\">\n                                        <i class=\"sa-fire\"></i>\n                                        <div style=\"overflow:hidden;\">\n                                            <a>Job Title : {{jobs.jobname}}</a>\n                                            <p>\n                                                <span class=\"span01\">\n                                                    <span class=\"sa-bold\">Company</span>\n                                                    <span class=\"span02\">:</span>\n                                                    <span>{{jobs.com_name}}</span>\n                                                </span>\n                                            </p>\n                                            <p>\n\n                                                <span class=\"span01\">\n                                                    <span class=\"sa-bold\">Job type</span>\n                                                    <span class=\"span02\">:</span>\n                                                    <span>{{jobs.jobtype}}</span>\n                                                </span><br>\n                                            </p>\n                                            <p>\n\n                                                <span class=\"span01\">\n                                                    <span class=\"sa-bold\">Due Date</span>\n                                                    <span class=\"span02\">:</span>\n                                                    <span>{{jobs.Due_date}}</span>\n                                                </span>\n                                            </p>\n\n                                            <p>\n                                                <span>\n                                                    <span class=\"sa-bold\">3-word pitch</span>\n                                                    <span class=\"span02\">:</span>\n                                                    <span>{{jobs.word_pitch}}</span>\n                                                </span>\n                                            </p>\n                                            <p>\n                                                <span>\n                                                    <span class=\"sa-bold\">Job Description</span>\n                                                    <span class=\"span02\">:</span>\n                                                    <span>{{jobs.job_description | slice:0:130}}</span>\n                                                </span>\n                                            </p>\n\n                                        </div>\n                                    </div>\n                                    <div class=\"right jobs-area-ul-right-area res-img\">\n                                        <img src=\"assets/images/shell.png\" />\n\n                                    </div>\n\n                                </div>\n                            </a>\n                        </li>\n\n\n                    </ul>\n\n                    <ul class=\"jobs-area-ul\">\n\n                        <li *ngFor=\"let job of getunfeaturedjob | slice:0:arrayslice\">\n                            <a (click)=\"jobdetail(job._id)\">\n                                <div class=\"jobs-area-ul-dv\">\n                                    <div class=\"left jobs-area-ul-left-area\">\n                                        <i class=\"sa-fire\"></i>\n                                        <div style=\"overflow:hidden;\">\n                                            <a>Job Title :{{job.jobname}}</a>\n                                            <p>\n                                                <span class=\"span01\">\n                                                    <span class=\"sa-bold\">Company</span>\n                                                    <span class=\"span02\">:</span>\n                                                    <span>{{job.com_name}}</span>\n                                                </span>\n                                            </p>\n                                            <p>\n\n                                                <span class=\"span01\">\n                                                    <span class=\"sa-bold\">Job type</span>\n                                                    <span class=\"span02\">:</span>\n                                                    <span>{{job.jobtype}}</span>\n                                                </span><br>\n                                            </p>\n                                            <p>\n\n                                                <span class=\"span01\">\n                                                    <span class=\"sa-bold\">Due Date</span>\n                                                    <span class=\"span02\">:</span>\n                                                    <span>{{job.Due_date}}</span>\n                                                </span>\n                                            </p>\n\n                                            <p>\n                                                <span>\n                                                    <span class=\"sa-bold\">3-word pitch</span>\n                                                    <span class=\"span02\">:</span>\n                                                    <span>{{job.word_pitch}}</span>\n                                                </span>\n                                            </p>\n                                            <p>\n                                                <span>\n                                                    <span class=\"sa-bold\">Job Description</span>\n                                                    <span class=\"span02\">:</span>\n                                                    <span>{{job.job_description | slice:0:130}}</span>\n                                                </span>\n                                            </p>\n\n                                        </div>\n                                    </div>\n                                    <div class=\"right jobs-area-ul-right-area res-img\">\n                                        <img src=\"assets/images/shell.png\" />\n\n                                    </div>\n                                </div>\n\n                            </a>\n                        </li>\n\n\n                    </ul>\n\n                    <div *ngIf=\"joblist.length + getfeaturedjob.length > 12\" class=\"left col-12 sa-pagination-main\">\n                        <ul class=\"sa-pagination\">\n\n                            <a *ngIf=\"adminslice < 13\" (click)=\"loadmore()\">\n                                <li class=\"sa-active\"><span>Load All</span></li>\n                            </a>\n                            <a *ngIf=\"adminslice > 13\" (click)=\"loadless()\">\n                                <li class=\"sa-active\"><span>Load less</span></li>\n                            </a>\n\n                        </ul>\n                    </div>\n                </div>\n\n            </div>\n\n        </div>\n    </div>\n</section>\n\n<app-footer></app-footer>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer class=\"footer-area01 left col-12\">\n    <div class=\"row\">\n        <div class=\"footer-control\">\n            <div class=\"sa-gotop ste\">\n                <h2><i class=\"fa fa-angle-double-up ste\"></i></h2>\n            </div>\n            \n            <div class=\"left col-12 list-n\">\n                <ul class=\"footer-ul\">\n                    <li>\n                        <h4 class=\"footer-heading\">About Us</h4>\n                        <p><!--Welcome to the Hoitalent one of the best jobPortal.\n                            We are a social service provider that enhances your interest on Hoitalent\n                             that helps you to find out the job of your type. -->\n                            Lorem ipsum dolor sit amet consectetur adipisicing elit. Possimus ut voluptas minus, tempora velit nemo expedita optio voluptatum consectetur qui ducimus nulla similique eaque, nihil aut distinctio vero iure! Beatae ullam ad soluta autem? </p>\n                    </li>\n                    <li>\n                        <h4 class=\"footer-heading\">Stay in Touch</h4>\n                        <div class=\"stay-tch-area left col-12\">\n                            <a ><i class=\"fa fa-envelope\" id=\"ftrspl\"></i>dks7677034@gmail.com</a>\n                            <a ><i class=\"fa fa-mobile\"></i>+91 821-939-4213</a>\n                            <a ><i class=\"fa fa-home\"></i><div style=\"overflow:hidden;\">V.P.O Jakhera Distt Una (HP)</div></a>\n                            <a ><i class=\"fa fa-globe\"></i>www.Mr.Dhiman.com</a>\n                        </div>\n                    </li>\n                    <li>\n                        <h4 class=\"footer-heading\">Social Networking</h4>\n                        <div class=\"social-area left col-12\">\n                            <a ><i class=\"fa fa-facebook-square\"></i><div style=\"overflow:hidden;\">Facebook<br/><span class=\"social-text-link\">www.facebook.com/Mr.Dhiman</span></div></a>\n                            <a ><i class=\"fa fa-twitter-square\"></i><div style=\"overflow:hidden;\">Twitter<br/><span class=\"social-text-link\">www.twitter.com/Mr.Dhiman</span></div></a>\n                            <a ><i class=\"fa fa-square\" style=\"position:relative;\">\n                            <i class=\"fa fa-comments\" style=\"font-size:12px; color:#ffffff; position:absolute; left:0px; top:2px;\"></i></i><div style=\"overflow:hidden;\">WeChat<br/><span class=\"social-text-link\">WeChat/Mr.Dhiman</span></div></a>\n                        </div>\n                    </li>\n                </ul>\n            </div>\n        </div>\n        \n        \n    </div>\n</footer>\n<footer class=\"footer-area02 left col-12\">\n    <div class=\"row\">\n        <div class=\"left col-12 align-c\">\n            <span>&copy;2021 Hoitelant All rights reserved. &nbsp;I&nbsp;  <a >Terms & Conditions</a>  &nbsp;I&nbsp;  <a >FAQ</a></span>\n        </div>\n    </div>\n</footer>\n","import { Component, DoCheck, OnInit,  } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { RemoveLoad } from 'src/app/actions/loginaction';\n\nimport { getloginloading, getlogivalues } from 'src/app/Selectors/login-selector';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n \n  styleUrls: ['./header.component.css'],\n  \n})\nexport class HeaderComponent implements OnInit,DoCheck {\n\n  date = null;\n  val:string;\n  username:string;\n \n\n  constructor(private router:Router, private store:Store) {\n   \n    this.getloginvalue();\n  }\n\n  ngOnInit(){\n   \n    \n\n    this.getdate();\n    setInterval(() => {\n      this.getdate();\n    }, 1000);\n\n\n  }\n \n \n  ngDoCheck(): void {\n\n   \n    if(this.username == null){\n      this.val=\"SignIn\";\n      \n    }\n    else{\n      this.val=\"SignOut\";\n    }\n    }\n\n\n  getloginvalue(){\n\n    const loginloading$=this.store.select(getloginloading)\n    loginloading$.subscribe(data=>{\n      // console.log(data);\n    });\n    const loginvalues$=this.store.select(getlogivalues);\n    loginvalues$.subscribe(data=>{\n      // console.log(data);\n      if(!data.result){\n        this.username=data.name;\n         \n       }\n       else{\n        this.username=data.result[0].username;\n       }\n    })\n  }\n\n  getdate() {\n    var setdate = new Date();\n    this.date = setdate;\n  }\n  async postjob(){\n\n    if(this.username == null){\n\n     this.router.navigate([\"/login\"])\n      alert(\"You should have to SignIn First to Post a Job\");\n    }\n    else{\n      this.router.navigate([\"/postjob\"]);\n    }\n  }\n\n  logoutOrLogIn(){\n    if(this.username == null){\n      this.router.navigate(['/login']);\n    }\n    else{\n      this.store.dispatch(new RemoveLoad());\n    this.router.navigate(['/login']);\n    }\n    \n  }\n\n\n\n}\n\n","<header >\n  <div class=\"top_bar\">\n    <div class=\"left\">\n      <ul>\n        <li>\n          <span class=\"icon\"><img src=\"assets/images/calender.svg\" alt=\"\"></span>\n          <span class=\"txt\">{{date |date: 'longDate'}}</span>\n        </li>\n        <li>\n          <span class=\"icon\"><img src=\"assets/images/time.svg\" alt=\"\"></span>\n          <span class=\"txt\">{{date | date: 'longTime'}}</span>\n        </li>\n      </ul>\n    </div>\n    <div class=\"right\">\n      <ul>\n        <li *ngIf=\"username\">\n          <span class=\"icon\"><img src=\"assets/images/user.svg\" alt=\"\"></span>\n          <span class=\"txt\">{{username}}</span>\n        </li> \n        <li>\n          <a class=\"txt\" (click)=\"logoutOrLogIn()\">{{val}}</a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</header>\n<header id=\"header\" class=\"res-img shadow\">\n    <div class=\"row\">\n        <div class=\"left col-12\">\n            <div class=\"left logo\">\n                <a routerLink=\"/Home\"><img src=\"assets/images/logo.png\"></a>\n            </div>\n            \n            <div class=\"right login_signup_links\">\n               \n                <a class=\"login_link hllink left\" routerLink=\"/Home\" >Home </a>\n                <a class=\"signup_link hlbtn left\" routerLink=\"/joblist\"  >Jobs</a>\n                <a class=\"signup_link hlbtn left\" (click)=\"postjob()\"  >Post a Job</a>\n                \n            </div>\n           \n        </div>\n    </div>\n</header> \n","import { Component, DoCheck, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { Router } from \"@angular/router\";\nimport { SocialAuthService, FacebookLoginProvider, GoogleLoginProvider, VKLoginProvider } from \"angularx-social-login\";\nimport { Store } from '@ngrx/store';\nimport { loginReducerState } from '../../Reducer/index'\nimport { LoadFailure, LoadValues, LoadValuesSuccess } from 'src/app/actions/loginaction';\nimport { AccountService } from \"../../service/account.service\"\nimport { login } from \"../../model/login-model\"\n\n\n@Component({\n  selector: 'app-log-in',\n  templateUrl: './log-in.component.html',\n  styleUrls: ['./log-in.component.css']\n})\nexport class LogInComponent implements OnInit,DoCheck{\n  error: boolean;\n  login: login[];\n  name: string;\n  token:string;\n  username:string;\n  password:string;\n\n  Remember:boolean;\n\n  constructor(private router: Router, \n              private authservice: SocialAuthService, \n              private store: Store<loginReducerState>, \n              private service: AccountService\n              ) { }\n\n\n  ngOnInit() {\n\n    this.username=localStorage.getItem(\"username\");\n    this.password=localStorage.getItem(\"password\");\n    \n\n  }\n  ngDoCheck(){\n    this.rememberme()\n  }\n\n  async socialsignIN(socialplatform: string) {\n    let socialplatformprovider;\n\n    if (socialplatform == \"facebook\") {\n      socialplatformprovider = FacebookLoginProvider.PROVIDER_ID;\n    }\n\n    if (socialplatform == \"google\") {\n      socialplatformprovider = GoogleLoginProvider.PROVIDER_ID;\n    }\n\n    if (socialplatform == \"linkedin\") {\n      socialplatformprovider = VKLoginProvider.PROVIDER_ID;\n    }\n\n\n    this.store.dispatch(new LoadValues);\n\n\n    await this.authservice.signIn(socialplatformprovider).then(data => {\n      // console.log(data);\n\n      this.store.dispatch(new LoadValuesSuccess({ data }));\n\n      if (data) {\n        this.error = false;\n      }\n\n    }).catch(err => {\n      this.store.dispatch(new LoadFailure({ err }));\n      if (!err) {\n        this.error = true;\n      } else {\n        console.log(err);\n      }\n\n    })\n    if (this.error == false) {\n      this.router.navigate(['/Home']);\n    }\n  }\n\n\n  onsubmit(data ,valid) {\n    if(valid){\n    \n\n      this.username=data.username;\n    this.password=data.password;\n    this.Remember=data.RememberMe;\n  \n    this.login = data;\n    const getloginvalues$ = this.service.getloginvalues(this.login);\n    this.store.dispatch(new LoadValues);\n    getloginvalues$.subscribe(data => {\n      if (data.code == \"401\" && data.status == \"not valid email\") {\n        alert(\"Invaid Username\");\n      }\n      else if (data.code == \"401\" && data.status == \"password not valid\") {\n        alert(\"Invaid password\");\n      }\n      else {\n        this.store.dispatch(new LoadValuesSuccess({data}));\n        this.name=data.result[0].username;\n        this.token=data.result[0].jwtToken;\n      \n        this.router.navigate([\"/Home\"]);\n        \n      }\n    }),error=>{\n      this.store.dispatch(new LoadFailure(error));\n    }\n    }\n    \n  }\n\n  rememberme(){\n    if(this.Remember == true){\n        localStorage.setItem(\"username\",this.username);\n        localStorage.setItem(\"password\",this.password);\n    }\n  }\n}\n","\n\n<header id=\"header\" class=\"res-img shadow\">\n    <div class=\"row\">\n        <div class=\"left col-12\">\n            <div class=\"left logo\">\n                <a  routerLink=\"/Home\"><img src=\"assets/images/logo.png\"></a>\n            </div>\n            \n            <div class=\"right login_signup_links\">\n                <a class=\"signup_link hlbtn left\" routerLink=\"/signup\">Sign up</a>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n<section class=\"main-content-area01 left col-12\">\n    <div class=\"row\">\n        <div class=\"left log-in-sign-up-form shadow\">\n            <div class=\"forem-padding left\">\n                <div class=\"left form-area01\">\n                    <div class=\"social-site-login left\">\n                        <button (click)=\"socialsignIN('linkedin')\" class=\"col-12\" style=\"background-color: #003366;margin-bottom: 12px;margin-top: 12px; padding:8px\"><i class=\"left fa fa-linkedin-square\"></i>Login with Linkedin</button>\n                        <button (click)=\"socialsignIN('facebook')\" class=\" col-12\" style=\"background-color: blue;margin-bottom: 12px;padding:8px ;\" ><i class=\"left fa fa-facebook-square\"></i>Login with Facebook</button>\n                        <button (click)=\"socialsignIN('google')\" class=\"col-12\"  style=\"background-color:red;margin-bottom: 12px;padding:8px;\"><i class=\"left fa fa-google-plus-square\"></i>Login with Google +</button>\n                    </div>\n                </div>\n                <div class=\"left loginor-area\"><span>Or</span></div>\n                <div class=\"right form-area02\">\n                    <div class=\"right login-registration-area\">\n                        <form #loginform=\"ngForm\" (ngSubmit)=\" onsubmit(loginform.value ,loginform.valid) \">\n                            <label class=\"lbl\">Email Address</label>\n                            <input type=\"text\" name=\"username\" class=\"form-control\" [ngModel]=\"this.username\" #usernames=\"ngModel\" autocomplete=\"off\" required>\n                            <span *ngIf=\"usernames.invalid && (usernames.touched || loginform.submitted)\" style=\"color: red; size: 11px;\">Invalid username</span><br>\n                            \n                            \n                            <label class=\"lbl\">Password</label>\n                            <input pattern=\"^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,10}$\"\n                            type=\"password\" name=\"password\" class=\"form-control\"  [ngModel]=\"password\" #pasword=\"ngModel\" required>\n                            <span *ngIf=\"pasword.value === '' && (pasword.touched || loginform.submitted)\"  style=\"color: red; size: 11px;\">Enter password</span><br>\n                            <span *ngIf=\"pasword.invalid &&  (pasword.touched || loginform.submitted)\"  style=\"color: red; size: 11px;\">Should contain min 8 character and special character </span>\n                        \n                            <span class=\"left col-12 remember-area01\">\n                                <span class=\"sa-checkbox\">\n                                    <input style=\"width:auto;\" type=\"checkbox\" name=\"RememberMe\" class=\"left\" id=\"lbl01\" ngModel #remeber=\"ngModel\">\n                                    <label for=\"lbl01\" class=\"left\">Remember me</label>\n                                </span>\n                                <a  class=\"right\">Forgot Password?</a>\n                            </span>\n                            \n                            \n                        </form>\n                    </div>\n                </div>\n                \n                <div class=\"left col-12\">\n                    <div class=\"sa-btn-location\">\n                        <button  type=\"submit\" (click)=\"onsubmit(loginform.value, loginform.valid)\" class=\"sa-btn\">Sign in</button>\n                    </div>\n                </div>\n            </div>\n            \n        </div>\n        \n        <div class=\"left log-in-sign-up-form-nxt\" id=\"signup-btn-area\">\n            <a class=\"left col-12 align-c\" href=\"#\">If you haven&#8217;t an account yet, please</a>\n            <div class=\"sa-btn-location\">\n                <a  class=\"sa-btn\" routerLink=\"/signup\">Sign up</a>\n            </div>\n        </div>\n        \n    </div>\n</section>\n<div> ","import { AfterContentInit, Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { getloginloading, getlogivalues } from 'src/app/Selectors/login-selector';\nimport {joblist} from \"../../model/joblist-model\"\nimport {AccountService} from \"../../service/account.service\";\nimport {JobreduxService} from \"../../service/job-redux\"\n\n@Component({\n  selector: 'app-postjob',\n  templateUrl: './postjob.component.html',\n  styleUrls: ['./postjob.component.css']\n})\nexport class PostjobComponent implements OnInit, AfterContentInit {\n  postjob:joblist[];\n  adminid:string;\n  \n\n  constructor(private service:AccountService,private store:Store ,private ReduxService:JobreduxService) { }\n\n  ngOnInit(): void {\n  }\n  ngAfterContentInit(){\n\n    this.getloginvalue();\n  }\n  getloginvalue(){\n\n    const loginloading$=this.store.select(getloginloading)\n    loginloading$.subscribe(data=>{\n      // console.log(data);\n    });\n    const loginvalues$=this.store.select(getlogivalues);\n    loginvalues$.subscribe(data=>{\n      // console.log(data);\n      if(!data.result){\n        this.adminid=data.id;\n         \n       }\n       else{\n        this.adminid=data.result[0]._id;\n       }\n    })\n  }\n\n  Onsubmit(val, valid){\n    if(valid){\n       // console.log(this.adminid);\n    val.admin=this.adminid;\n    this.postjob=val;\n    // console.log(this.postjob);\n    if(!val.admin){\n      alert(\"You should have to login again\");\n    }\n    else if(val.featured == \"\"){\n      alert(\"Select Featured or Not\");\n    }\n    else{\n      const postjob$ =this.service.postJob(this.postjob);\n      postjob$.subscribe(data=>{\n        if(data){\n          this.ReduxService.getalljobs(true);\n        }\n        alert(data.status);\n      })\n    }\n    }\n   \n  }\n\n}\n","<app-header></app-header>\n\n\n\n\n<section class=\"main-content-area01 left col-12 \">\n    <div class=\"row\">\n        <div class=\"left log-in-sign-up-form shadow\">\n\n            <div class=\"left col-12 signup-heading\">\n                <a href=\"#\">\n                    <h2>Post a Job</h2>\n                </a>\n            </div>\n            <div class=\"forem-padding left\">\n                <form #postJob=\"ngForm\" >\n                    <div class=\"sa-signup-form left col-12 form-select\">\n                        <div class=\"sa-signup-form-left left\">\n                            <label class=\"name\">Job Name<span>*</span></label>\n                            <input type=\"text\" name=\"jobname\" class=\"sa-input col-12\" ngModel #jobname=\"ngModel\"\n                                required>\n                            <span *ngIf=\"jobname.invalid &&(jobname.touched || postJob.submitted)\" style=\" color:red;size:11px\">Enter\n                                Name</span><br>\n\n                            <label class=\"text\">Job Type<span>*</span></label>\n                            <input type=\"text\" name=\"jobtype\" class=\"sa-input col-12\" ngModel #jobtype=\"ngModel\"\n                                required>\n                            <span *ngIf=\"jobtype.invalid &&(jobtype.touched || postJob.submitted)\" style=\" color:red;size:11px\">\n                              Field Required  </span><br>\n\n                            <label class=\"name\">Job Description<span>*</span></label>\n                            <textarea type=\"text\" name=\"job_description\" class=\"sa-input col-12\"\n                             style=\"width:96%!important;\" ngModel\n                                #job_description=\"ngModel\" required></textarea>\n                            <span *ngIf=\"job_description.invalid && (job_description.touched || postJob.submitted)\"\n                                style=\" color:red;size:11px\">Field Required</span><br>\n\n                            <label class=\"name\">Experience required<span>*</span></label>\n                            <input type=\"number\" name=\"experince\" class=\"sa-input col-12\" ngModel #experience=\"ngModel\"\n                                required>\n                            <span *ngIf=\"experience.invalid &&(experience.touched || postJob.submitted)\" style=\" color:red;size:11px\">\n                              Enter Job experience  </span>\n\n                              \n\n                            <label class=\"name mobile-vw\">&nbsp;</label>\n\n\n                        </div>\n\n                        <div class=\"sa-signup-form-right right\">\n                            <label class=\"name\">Company Name <span>*</span></label>\n                            <input type=\"text\" name=\"com_name\" class=\"sa-input col-12\" ngModel #com_name=\"ngModel\"\n                                required>\n                            <span *ngIf=\"com_name.invalid && (com_name.touched || postJob.submitted)\" style=\" color:red;size:11px\">\n                                Field Required\n                            </span><br>\n                            <label class=\"name\">Company Email<span>*</span></label>\n                            <input type=\"email\" name=\"com_email\" class=\"sa-input col-12\"\n                                pattern=\"^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$\" ngModel #com_email=\"ngModel\" required>\n                            <span *ngIf=\"com_email.invalid &&(com_email.touched || postJob.submitted)\" style=\" color:red;size:11px\">\n                                Enter Email\n                            </span><br>\n                            <label class=\"name\">Company location<span>*</span></label>\n                            <input type=\"search\" name=\"com_location\" class=\"sa-input col-12\" ngModel\n                                #com_location=\"ngModel\" required>\n                            <span *ngIf=\"com_location.invalid &&(com_location.touched || postJob.submitted)\" style=\" color:red;size:11px\">\n                                Enter company Location\n                            </span><br>\n                            <label class=\"name\">Enter the 3-Word Pitch For Job<span>*</span></label>\n                            <input type=\"text\" name=\"word_pitch\" class=\"sa-input col-12\" ngModel #wordpitch=\"ngModel\"\n                                required>\n                            <span *ngIf=\"wordpitch.invalid && (wordpitch.touched || postJob.submitted)\" style=\" color:red;size:11px\">\n                                Field Empty\n                            </span><br>\n                            <label class=\"name\">Enter Due Date<span>*</span></label>\n                            <input type=\"date\" name=\"Due_date\" class=\"sa-input col-12\" ngModel #duedate=\"ngModel\"\n                                required>\n                            <span *ngIf=\"duedate.invalid && duedate.touched\" style=\" color:red;size:11px\">\n                                Field Empty\n                            </span><br>\n                            <label class=\"name\">Featured<span>*</span></label>\n                            <input type=\"radio\" name=\"featured\" value=\"true\" style=\"width:5%!important; \" ngModel \n                                class=\"sa-input col-12\" [checked]=\"true\"><span class=\"name\">Yes</span><br /><br />\n                            <input type=\"radio\" name=\"featured\" value=\"false\" style=\"width:5%!important;\" ngModel\n                                class=\"sa-input col-12\">No\n\n                        </div>\n\n                    </div>\n\n                    <div class=\"left col-12\">\n                        <div class=\"sa-btn-location\">\n                            <button type=\"submit\" (click)=\"Onsubmit(postJob.value, postJob.valid)\" class=\"sa-btn\">Post a Job</button>\n                        </div>\n                    </div>\n\n                </form>\n            </div>\n\n\n        </div>\n\n    </div>\n</section>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {login} from \"../../model/login-model\";\nimport {AccountService} from \"../../service/account.service\";\nimport {NgForm} from \"@angular/forms\"\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css']\n})\nexport class SignUpComponent implements OnInit {\n  signupform:NgForm;\n  @ViewChild('signupform') currentForm: NgForm;\n  signUp:login[];\n  \n  constructor(private service:AccountService, private router:Router) { }\n\n  ngOnInit(): void {\n\n      // this.signUp=<login>{\n\n      //   username:\"\",\n      //   password:\"\",\n      //   email:\"\",\n      //   nationality:\"\",\n      //   university:\"\",\n      //   highest_Qualification:\"\",\n      //   major:\"\",\n      //   job_prefrence:\"\",\n      // }\n  }\n  onsignUp(val, valid){\n    if(valid){\n      this.signUp=val;\n      // console.log(this.signUp);\n      const getadduserResponce$=this.service.addnewuser(this.signUp);\n      \n      getadduserResponce$.subscribe(data=>{\n        // console.log(data.code);\n        if(data.code == 200){\n          alert(\"SignUp successfull\");\n          this.router.navigate([\"/login\"]);\n        }\n        else{\n          alert(\"signUP faild\");\n        }\n      })\n\n    }\n\n  }\n}\n","<header id=\"header\" class=\"res-img shadow\">\n    <div class=\"row\">\n        <div class=\"left col-12\">\n            <div class=\"left logo\">\n                <a routerLink=\"/Home\"><img src=\"assets/images/logo.png\"></a>\n            </div>\n\n            <div class=\"right login_signup_links\">\n                <a class=\"signup_link hlbtn left\" routerLink=\"/login\">Sign in</a>\n            </div>\n        </div>\n    </div>\n</header> <!-- header area -->\n\n\n\n\n<section class=\"main-content-area01 left col-12\">\n    <div class=\"row\">\n        <div class=\"left log-in-sign-up-form shadow\">\n\n            <div class=\"left col-12 signup-heading\">\n                <a routerLink=\"/login\" >You can also sign up with\n                    <span><i class=\"fa fa-linkedin-square signupclr01\"></i>Linkedin</span>\n                    <span><i class=\"fa fa-facebook-square signupclr02\"></i>Facebook</span>\n                    <span><i class=\"fa fa-google-plus-square signupclr03\"></i>Google +</span>\n                </a>\n            </div>\n            <div class=\"forem-padding left\">\n                <form #signupform=\"ngForm\" (ngSubmit)=\"onsignUp(signupform.value,signupform.valid)\">\n                    <div class=\"sa-signup-form left col-12 form-select\">\n                        <div class=\"sa-signup-form-left left\">\n                            <label class=\"name\">Full Name<span>*</span></label><br>\n                            <input type=\"text\" name=\"username\" class=\"sa-input col-12\" ngModel #username=\"ngModel\" required>\n                            <span *ngIf=\"username.invalid && (username.touched || signupform.submitted)\" style=\"color:red ;size: 11px;\">\n                                Invalid Name\n                            </span><br>\n\n                            <label class=\"name\">Email<span>*</span></label>\n                            <input type=\"email\" name=\"email\" class=\"sa-input col-12\" ngModel #email=\"ngModel\" required\n                                pattern=\"^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$\">\n                            <span *ngIf=\"email.invalid &&(email.touched || signupform.submitted)\" style=\"color:red ;size: 11px;\">\n                                Invalid email\n                            </span>\n\n                            <span class=\"left col-12\">\n                                <span class=\"left colstw\">\n                                    <label class=\"name\">Password<span>*</span></label>\n                                    <input type=\"password\" name=\"password\" class=\"sa-input col-12\" ngModel #password=\"ngModel\" required \n                                    pattern=\"^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,10}$\">\n                                    <span *ngIf=\"password.value ==='' && (password.touched || signupform.submitted)\" style=\"color:red ;size: 11px;\">\n                                        Enter password\n                                    </span><br>\n                                    <span *ngIf=\"password.invalid &&(password.touched || signupform.submitted)\" style=\"color:red ;size: 11px;\">\n                                        Password should contain atleast 8-10 char and special character\n                                    </span>\n                                </span>\n                                \n                                <span class=\"right colstw\">\n                                    <label class=\"name\">Confirm Password<span>*</span></label>\n                                    <input type=\"password\" name=\"cofpass\" class=\"sa-input col-12\" ngModel #cofpass='ngModel' required>\n                                    <span *ngIf=\"  cofpass.touched &&  cofpass.value != password.value \" style=\"color:red ;size: 11px;\">\n                                        Invalid password\n                                    </span>\n                                </span>\n                            </span>\n\n                            <label class=\"name\">Nationality<span>*</span></label>\n                            <input type=\"text\" name=\"nationality\" class=\"sa-input col-12\" ngModel #nationality=\"ngModel\" required\n                            ><br>\n                            <span *ngIf=\"nationality.invalid && (nationality.touched || signupform.submitted)\" style=\"color:red ;size: 11px;\">\n                                Field Required\n                            </span>\n\n                        \n                        </div>\n\n                        <div class=\"sa-signup-form-right right\">\n\n                            <label class=\"name\">University<span>*</span></label>\n                            <input type=\"text\" name=\"university\" class=\"sa-input col-12\" ngModel #university=\"ngModel\" required\n                            >\n                            <span *ngIf=\"university.invalid && (university.touched || signupform.submitted)\" style=\"color:red ;size: 11px;\">\n                                Field Required\n                            </span><br>\n\n                            <label class=\"name\">Highest Degree<span>*</span></label>\n                            <input type=\"text\" name=\"highest_Qualification\" class=\"sa-input col-12\" ngModel #highest_Qualification=\"ngModel\" required\n                            >\n                            <span *ngIf=\"highest_Qualification.invalid &&(highest_Qualification.touched || signupform.submitted)\" style=\"color:red ;size: 11px;\">\n                                Field Required\n                            </span><br>\n                            <label class=\"name\">Major<span>*</span></label>\n                            <input type=\"text\" name=\"major\" class=\"sa-input col-12\" ngModel #major=\"ngModel\" required\n                                >\n                            <span *ngIf=\"major.invalid &&(major.touched || signupform.submitted)\" style=\"color:red ;size: 11px;\">\n                                Field Required\n                            </span><br>\n                            <label class=\"name\">Job Preference<span>*</span></label>\n                            <input type=\"text\" name=\"job_prefrence\" class=\"sa-input col-12\" ngModel #job_prefrence=\"ngModel\" required\n                                >\n                            <span *ngIf=\"job_prefrence.invalid &&(job_prefrence.touched || signupform.submitted)\" style=\"color:red ;size: 11px;\">\n                                Field Required\n                            </span><br>\n                            <label class=\"name mobile-vw\">&nbsp;</label>\n                            \n                        </div>\n\n\n                    </div>\n\n                    <div class=\"left col-12\">\n                        <div class=\"sa-btn-location\">\n                            <button type=\"submit\" (click)=\"onsignUp(signupform.value,signupform.valid)\" class=\"sa-btn\">Sign up</button>\n                        </div>\n                    </div>\n\n                </form>\n            </div>\n\n\n        </div>\n\n    </div>\n</section>","import { AfterContentInit, Component, OnDestroy, OnInit } from '@angular/core';\nimport {ActivatedRoute, Route, Router} from \"@angular/router\"\nimport {JobreduxService} from \"../../service/job-redux\"\nimport {joblist} from \"../../model/joblist-model\";\nimport {AccountService} from \"../../service/account.service\"\n\n@Component({\n  selector: 'app-update-job',\n  templateUrl: './update-job.component.html',\n  styleUrls: ['./update-job.component.css']\n})\nexport class UpdateJobComponent implements OnInit, AfterContentInit {\n  jobdetail: joblist[]=[];\n  updatedvalues:joblist;\n  id:string \n  updatejob:any;\n  constructor(private route:ActivatedRoute,private router:Router, private ReduxService:JobreduxService, private service:AccountService ) { }\n\n  ngOnInit(): void {\n  this.id= this.route.snapshot.paramMap.get(\"id\"); \n  }\n  ngOnDestroy(){\n    this.jobdetail=[];\n  }\n  ngAfterContentInit(){\n\n    this.getupdatedetail();\n\n  }\n  getupdatedetail(){\n    \n    const getjobslist$ = this.ReduxService.getalljobs(false)[1];\n    const getjobsError$ = this.ReduxService.getalljobs(false)[2];\n    \n    getjobslist$.subscribe(result=>{\n      result.forEach(element => {\n        if(element._id == this.id ){\n          this.jobdetail.push(element);\n        } \n      });\n      // console.log(this.jobdetail);\n    }),error=>{\n      getjobsError$.subscribe(data=>{\n        console.log(data);\n      })\n    }\n  }\n  onUpdate(val , valid){\n    if(valid){\n   \n      val.id=this.id\n      this.updatedvalues=val;\n      // console.log(this.updatedvalues);  \n      if(val.featured == \"\"){\n        alert(\"Select Featured or Not\");\n      }\n      else{\n        const getUpdateJobResponce$=this.service.updatejobs(this.updatedvalues);\n        getUpdateJobResponce$.subscribe(data=>{\n          if(data.status == true){\n            alert(\"Job successfully Updated\");\n            this.ReduxService.getalljobs(true);\n\n          }\n          else{\n            alert(`error Occured ${data.Error}`);\n          }\n        })\n      }\n    }\n      \n    }\n  \n\n}\n","<app-header></app-header>\n\n\n\n\n<section class=\"main-content-area01 left col-12 \">\n    <div class=\"row\">\n        <div class=\"left log-in-sign-up-form shadow\">\n\n            <div class=\"left col-12 signup-heading\">\n                <a href=\"#\">\n                    <h2>Update a Job</h2>\n                </a>\n            </div>\n            <div class=\"forem-padding left\">\n                <form #Updatejob=\"ngForm\">\n                    <div class=\"sa-signup-form left col-12 form-select\">\n                        <div class=\"sa-signup-form-left left\">\n                            <label class=\"name\">Job Name<span>*</span></label>\n                            <input type=\"text\" name=\"jobname\" class=\"sa-input col-12\" [ngModel]=\"this.jobdetail[0].jobname\" #jobnames=\"ngModel\"\n                                required>\n                            <span *ngIf=\"jobnames.invalid && (jobnames.touched || Updatejob.submitted)\" style=\" color:red;size:11px\">Enter\n                                Name</span><br>\n\n                            <label class=\"text\">Job Type<span>*</span></label>\n                            <input type=\"text\" name=\"jobtype\" class=\"sa-input col-12\" [ngModel]=\"this.jobdetail[0].jobtype\" #jobtype=\"ngModel\"\n                                required>\n                            <span *ngIf=\"jobtype.invalid &&  (jobtype.touched || Updatejob.submitted)\" style=\" color:red;size:11px\">\n                              Field Required  </span><br>\n\n                            <label class=\"name\">Job Description<span>*</span></label>\n                            <textarea type=\"text\" name=\"job_description\" class=\"sa-input col-12\"\n                                 style=\"width:96%!important;\" [ngModel]=\"this.jobdetail[0].job_description\"\n                                #job_description=\"ngModel\" required></textarea>\n                            <span *ngIf=\"job_description.invalid &&  (job_description.touched || Updatejob.submitted)\"\n                                style=\" color:red;size:11px\">Should contain minimum 20 character</span><br>\n\n                            <label class=\"name\">Experience required<span>*</span></label>\n                            <input type=\"number\" name=\"experince\" class=\"sa-input col-12\" [ngModel]=\"this.jobdetail[0].experince\" #experience=\"ngModel\"\n                                required>\n                            <span *ngIf=\"experience.invalid &&  (experience.touched || Updatejob.submitted)\" style=\" color:red;size:11px\">\n                              Enter Job experience  </span>\n\n                              \n\n                            <label class=\"name mobile-vw\">&nbsp;</label>\n\n\n                        </div>\n\n                        <div class=\"sa-signup-form-right right\">\n                            <label class=\"name\">Company Name <span>*</span></label>\n                            <input type=\"text\" name=\"com_name\" class=\"sa-input col-12\" [ngModel]=\"this.jobdetail[0].com_name\" #com_name=\"ngModel\"\n                                required>\n                            <span *ngIf=\"com_name.invalid && (com_name.touched || Updatejob.submitted)\" style=\" color:red;size:11px\">\n                                Field Required\n                            </span><br>\n                            <label class=\"name\">Company Email<span>*</span></label>\n                            <input type=\"email\" name=\"com_email\" class=\"sa-input col-12\"\n                                pattern=\"^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$\" [ngModel]=\"this.jobdetail[0].com_email\" #com_email=\"ngModel\" required>\n                            <span *ngIf=\"com_email.invalid && (com_email.touched || Updatejob.submitted)\" style=\" color:red;size:11px\">\n                                Enter Email\n                            </span><br>\n                            <label class=\"name\">Company location<span>*</span></label>\n                            <input type=\"search\" name=\"com_location\" class=\"sa-input col-12\" [ngModel]=\"this.jobdetail[0].com_location\"\n                                #com_location=\"ngModel\" required>\n                            <span *ngIf=\"com_location.invalid &&  (com_location.touched || Updatejob.submitted)\" style=\" color:red;size:11px\">\n                                Enter company Location\n                            </span><br>\n                            <label class=\"name\">Enter the 3-Word Pitch For Job<span>*</span></label>\n                            <input type=\"text\" name=\"word_pitch\" class=\"sa-input col-12\" [ngModel]=\"this.jobdetail[0].word_pitch\" #wordpitch=\"ngModel\"\n                                required>\n                            <span *ngIf=\"wordpitch.invalid && (wordpitch.touched || Updatejob.submitted)\" style=\" color:red;size:11px\">\n                                Field Empty\n                            </span><br>\n                            <label class=\"name\">Enter Due Date<span>*</span></label>\n                            <input type=\"date\" name=\"Due_date\" class=\"sa-input col-12\" [ngModel]=\"this.jobdetail[0].Due_date\" #duedate=\"ngModel\"\n                                required>\n                            <span *ngIf=\"duedate.invalid &&  (duedate.touched || Updatejob.submitted)\" style=\" color:red;size:11px\">\n                                Field Empty\n                            </span><br>\n                            <label class=\"name\">Featured<span>*</span></label>\n                            <input type=\"radio\" name=\"featured\" value=\"true\" style=\"width:5%!important; \" [ngModel]=\"this.jobdetail[0].featured\" \n                                class=\"sa-input col-12\" [checked]=\"true\"><span class=\"name\">Yes</span><br /><br />\n                            <input type=\"radio\" name=\"featured\" value=\"false\" style=\"width:5%!important;\" ngModel\n                                class=\"sa-input col-12\">No\n\n                        </div>\n\n                    </div>\n\n                    <div class=\"left col-12\">\n                        <div class=\"sa-btn-location\">\n                            <button type=\"submit\" (click)=\"onUpdate(Updatejob.value,Updatejob.valid)\" class=\"sa-btn\">Update  Job</button>\n                        </div>\n                    </div>\n\n                </form>\n            </div>\n\n\n        </div>\n\n    </div>\n</section>","import { Injectable } from '@angular/core';\nimport { HttpService } from \"./http.service\";\nimport { environment } from \"../../environments/environment\"\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService {\n\n  constructor(private http: HttpService) { }\n\n  private baseurl = environment.url;\n  // For login component\n  private getlogindetails = this.baseurl + \"getuserval\";\n  private getuserloginvalues = this.baseurl + \"getuserloginvalues\";\n\n  // Update Account\n\n  private updateAcoount= this.baseurl + \"updateAccount\";\n\n  // To signup a user\n\n  private addnewuserval=this.baseurl + \"addloginvalues\";\n\n\n  // For joblist component\n\n  private getjoblist = this.baseurl + \"getAllJoblist\";\n  // private getfeaturedjobs = this.baseurl + \"getfeaturedjobs\";\n  // private getsearchedJob = this.baseurl + \"getsearchedJob\";\n  private updatejob=this.baseurl + \"updatejob\";\n  private deletejob= this.baseurl + \"deletejob\";\n\n  //  To post a Job\n\n  private addNewJob = this.baseurl + \"addNewJob\";\n\n  // To apply a job\n\n  private applyJob=this.baseurl + \"applyJob\";\n\n  //  For login component\n\n\n  getloginvalues(data): Observable<any> {\n\n    return this.http.POST(this.getuserloginvalues, data);\n  }\n\n\n  updateAccount(data):Observable<any>{\n    return this.http.PUT(this.updateAcoount , data);\n  }\n\n  // getloginvalues(data):Promise<any> {\n  // //  console.log(data);\n  //   return this.http.post(this.getuserloginvalues, data).then(data=>{\n  //     return data;\n  //   })\n  // }\n\n\n  // To signup new user\n\n\n  addnewuser(data):Observable<any>{\n\n  return this.http.POST(this.addnewuserval, data);\n  }\n\n   \n\n  // For jobist component\n\n\n  getAlljobs(): Observable<any> {\n    return this.http.GET(this.getjoblist).pipe(map(data => data.result));\n  }\n\n  // getfeatured(): Observable<any> {\n  //   return this.http.GET(this.getfeaturedjobs).pipe(map(data => data.result));\n\n  // }\n\n  // getsearchedjob(id): Observable<any> {\n  //   return this.http.POST(this.getsearchedJob, id);\n  // }\n\n  updatejobs(id):Observable<any>{\n    return this.http.PUT(this.updatejob, id);\n  }\n\n\n  // To Delete a job\n\n  Deletejob(val):Observable<any>{\n    // console.log(val);\n    return this.http.DELETE(this.deletejob+val);\n  }\n\n\n\n\n  //  To post a job\n\n  postJob(id): Observable<any> {\n    return this.http.POST(this.addNewJob, id);\n  }\n\n  // apply for a job\n\n  applyJobs(id):Observable<any>{\n    return this.http.POST(this.applyJob , id);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { catchError } from 'rxjs/operators'\nimport { Observable } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class HttpService {\n\n  constructor(private http: HttpClient) { }\n  private token: string;\n\n  private headers = new HttpHeaders({\n    'Access-Control-Allow-Origin': '*',\n    'Access-Control-Allow-Methods': 'POST, GET, OPTIONS, PUT',\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  });\n\n  private errorhandler(Responce: any) {\n    const err = Response.error;\n    console.log(err);\n\n  }\n  getheaders(): HttpHeaders {\n    // this.createAuthHeader();\n    return this.headers;\n  }\n  createAuthHeader(){\n    // this.headers.set(\"Authorization\", `Bearer , ${}`)\n  }\n\n  GET(url: string, params?: any): Observable<any> {\n    const data = { params, headers: this.headers }\n    return this.http.get(url, data).pipe(catchError(this.errorhandler.bind(this)));\n  }\n\n  POST(url: string, params?: any): Observable<any> {\n  \n    return this.http.post(url,params,{headers:this.headers});\n  }\n\n  PUT(url: string, params?: any): Observable<any> {\n    return this.http.put(url, params, {headers: this.headers}).pipe(catchError(this.errorhandler.bind(this)));\n  }\n\n  DELETE(url: string): Observable<any> {\n    return this.http.delete(url,{ headers : this.headers});\n  }\n\n}\n","import {Injectable} from \"@angular/core\";\r\nimport {AccountService} from \"../service/account.service\"\r\nimport {Store} from \"@ngrx/store\"\r\nimport { LoadJobFailure, LoadJobs, LoadJobsSuccess } from \"../actions/joblist-action\";\r\nimport { combineLatest, Observable } from \"rxjs\";\r\nimport {getjobserror, getjobslist, getjobsloaded, getjobsLoading} from \"../Selectors/joblist-selector\"\r\nimport { map, take } from \"rxjs/operators\";\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\n\r\n\r\nexport class JobreduxService{\r\n    \r\n    constructor(private service:AccountService , private store:Store){}\r\n\r\n\r\n    getalljobs(force:boolean):[Observable<boolean>, Observable<any>, Observable<string>]{\r\n        const getjoblist$=this.store.select(getjobslist);\r\n        const getjobloading$=this.store.select(getjobsLoading);\r\n        const getjobloaded$=this.store.select(getjobsloaded);\r\n        const getjoberror$=this.store.select(getjobserror);\r\n        combineLatest([getjobloaded$ ,getjobloading$]).pipe(take(1)).subscribe(result=>{\r\n            if((!result[0] && !result[1])  || (force) ){\r\n                this.store.dispatch(new LoadJobs());   \r\n                const getalljobs$=this.service.getAlljobs();\r\n                getalljobs$.subscribe(data=>{\r\n            \r\n                    // console.log(data);\r\n                    this.store.dispatch(new LoadJobsSuccess({data}));\r\n                }),err=>{\r\n                    this.store.dispatch(new LoadJobFailure(err));\r\n                }\r\n             }\r\n        })\r\n        return [getjobloading$,getjoblist$,getjoberror$]\r\n\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  url:\"http://localhost:8082/\",\n  production: true\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}